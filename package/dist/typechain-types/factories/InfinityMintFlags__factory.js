(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "ethers"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InfinityMintFlags__factory = void 0;
    /* Autogenerated file. Do not edit manually. */
    /* tslint:disable */
    /* eslint-disable */
    const ethers_1 = require("ethers");
    const _abi = [
        {
            inputs: [
                {
                    internalType: "address",
                    name: "storageDestination",
                    type: "address",
                },
                {
                    internalType: "address",
                    name: "erc721Destination",
                    type: "address",
                },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "changee",
                    type: "address",
                },
                {
                    indexed: false,
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "PermissionChange",
            type: "event",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "from",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "to",
                    type: "address",
                },
            ],
            name: "TransferedOwnership",
            type: "event",
        },
        {
            inputs: [],
            name: "approvalCount",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            name: "approved",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "deployer",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
            ],
            name: "getOption",
            outputs: [
                {
                    internalType: "string",
                    name: "",
                    type: "string",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
            ],
            name: "hasOption",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "isAuthenticated",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "tokenId",
                    type: "uint256",
                },
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
            ],
            name: "isFlagTrue",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
            ],
            name: "isGlobalFlag",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiApprove",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiRevoke",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "tokenId",
                    type: "uint256",
                },
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
                {
                    internalType: "bool",
                    name: "position",
                    type: "bool",
                },
            ],
            name: "setFlag",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
                {
                    internalType: "bool",
                    name: "position",
                    type: "bool",
                },
            ],
            name: "setGlobalFlag",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string",
                    name: "key",
                    type: "string",
                },
                {
                    internalType: "string",
                    name: "option",
                    type: "string",
                },
            ],
            name: "setOption",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "string[]",
                    name: "keys",
                    type: "string[]",
                },
                {
                    internalType: "string[]",
                    name: "options",
                    type: "string[]",
                },
            ],
            name: "setOptions",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
                {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "setPrivilages",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
    ];
    const _bytecode = "0x608060405234801561001057600080fd5b506040516112eb3803806112eb83398101604081905261002f916100a9565b60008054336001600160a01b0319918216811783558252600360205260408220805460ff191660019081179091558290556002919091556004805482166001600160a01b0394851617905560058054909116919092161790556100dc565b80516001600160a01b03811681146100a457600080fd5b919050565b600080604083850312156100bc57600080fd5b6100c58361008d565b91506100d36020840161008d565b90509250929050565b611200806100eb6000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806310a8c7a9146100d557806331ed86d2146100ea5780633acfd909146100fd5780636884d0a61461012657806386f09c171461013d5780638c86bb1f14610160578063908c36d7146101735780639663751314610186578063d12b66af14610199578063d15d4150146101ac578063d5f39488146101bf578063d8b964e6146101ea578063ef86e2c31461020d578063f2fde38b14610220578063f945a15314610233578063fe684c0e14610246575b600080fd5b6100e86100e3366004610b82565b610259565b005b6100e86100f8366004610b82565b61030f565b61011061010b366004610c96565b6103b8565b60405161011d9190610d26565b60405180910390f35b61012f60025481565b60405190815260200161011d565b61015061014b366004610c96565b610436565b604051901515815260200161011d565b6100e861016e366004610d51565b61044a565b610150610181366004610dab565b61051b565b6100e8610194366004610e7b565b61061e565b6100e86101a7366004610ed4565b6106ce565b6101506101ba366004610f2d565b610736565b6000546101d2906001600160a01b031681565b6040516001600160a01b03909116815260200161011d565b6101506101f8366004610f2d565b60036020526000908152604090205460ff1681565b61015061021b366004610c96565b61076d565b6100e861022e366004610f2d565b6107e1565b6100e8610241366004610f48565b610881565b6100e8610254366004610f99565b6108b3565b6000546001600160a01b0316331461028c5760405162461bcd60e51b815260040161028390610fc5565b60405180910390fd5b805161029757600080fd5b60005b815181101561030b576001600360008484815181106102bb576102bb610feb565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff19169215159290921790915560028054916102fe83611017565b909155505060010161029a565b5050565b6000546001600160a01b031633146103395760405162461bcd60e51b815260040161028390610fc5565b805161034457600080fd5b60005b815181101561030b5760006003600084848151811061036857610368610feb565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff19169215159290921790915560028054916103ab83611032565b9091555050600101610347565b6004546060906001600160a01b031663712a908d33846040518363ffffffff1660e01b81526004016103eb929190611049565b600060405180830381865afa158015610408573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610430919081019061106d565b92915050565b6000610441826103b8565b51151592915050565b61045433846109d7565b6104b15760405162461bcd60e51b815260206004820152602860248201527f6d75737420626520617070726f766564206f72206f776e6572206f6620746865604482015267081d1bdad95b925960c21b6064820152608401610283565b60048054604051638180a71760e01b81526001600160a01b0390911691638180a717916104e491879187918791016110e3565b600060405180830381600087803b1580156104fe57600080fd5b505af1158015610512573d6000803e3d6000fd5b50505050505050565b60048054604051633f08e8e360e11b815260009283926001600160a01b031691637e11d1c69161054f913391889101611049565b602060405180830381865afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610590919061110e565b905060018115151480610616575060048054604051636c17fd7960e01b81526001600160a01b0390911691636c17fd79916105cf91889188910161112b565b602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610610919061110e565b15156001145b949350505050565b80518251146106795760405162461bcd60e51b815260206004820152602160248201527f6b657973206d757374206d61746368206f7074696f6e7320696e206c656e67746044820152600d60fb1b6064820152608401610283565b60005b82518110156106c9576106c183828151811061069a5761069a610feb565b60200260200101518383815181106106b4576106b4610feb565b60200260200101516106ce565b60010161067c565b505050565b6004546001600160a01b0316631774bc3b3384846040518463ffffffff1660e01b81526004016107009392919061114a565b600060405180830381600087803b15801561071a57600080fd5b505af115801561072e573d6000803e3d6000fd5b505050505050565b600080546001600160a01b03838116911614806104305750506001600160a01b031660009081526003602052604090205460ff1690565b6004546000906001600160a01b0316637e11d1c633846040518363ffffffff1660e01b81526004016107a0929190611049565b602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610430919061110e565b6000546001600160a01b0316331461080b5760405162461bcd60e51b815260040161028390610fc5565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6004546001600160a01b031663a820ab973384846040518463ffffffff1660e01b81526004016107009392919061118a565b6000546001600160a01b031633146108dd5760405162461bcd60e51b815260040161028390610fc5565b6000546001600160a01b03838116911614156109345760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b6044820152606401610283565b6001600160a01b0382166000908152600360205260409020805460ff1916821580159190911790915561097b576002805490600061097183611017565b9190505550610991565b6002805490600061098b83611032565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b6005546040516001600160a01b03848116602483015260448201849052600092839283929091169060640160408051601f198184030181529181526020820180516001600160e01b031663430c208160e01b17905251610a3791906111ae565b600060405180830381855afa9150503d8060008114610a72576040519150601f19603f3d011682016040523d82523d6000602084013e610a77565b606091505b509150915081610ad8578051610acf5760405162461bcd60e51b815260206004820152601d60248201527f697320617070726f766564206f72206f776e65722072657665727465640000006044820152606401610283565b80518082602001fd5b600081806020019051810190610aee919061110e565b15156001149695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610b3b57610b3b610afd565b604052919050565b60006001600160401b03821115610b5c57610b5c610afd565b5060051b60200190565b80356001600160a01b0381168114610b7d57600080fd5b919050565b60006020808385031215610b9557600080fd5b82356001600160401b03811115610bab57600080fd5b8301601f81018513610bbc57600080fd5b8035610bcf610bca82610b43565b610b13565b81815260059190911b82018301908381019087831115610bee57600080fd5b928401925b82841015610c1357610c0484610b66565b82529284019290840190610bf3565b979650505050505050565b60006001600160401b03821115610c3757610c37610afd565b50601f01601f191660200190565b600082601f830112610c5657600080fd5b8135610c64610bca82610c1e565b818152846020838601011115610c7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610ca857600080fd5b81356001600160401b03811115610cbe57600080fd5b61061684828501610c45565b60005b83811015610ce5578181015183820152602001610ccd565b83811115610cf4576000848401525b50505050565b60008151808452610d12816020860160208601610cca565b601f01601f19169290920160200192915050565b602081526000610d396020830184610cfa565b9392505050565b8015158114610d4e57600080fd5b50565b600080600060608486031215610d6657600080fd5b8335925060208401356001600160401b03811115610d8357600080fd5b610d8f86828701610c45565b9250506040840135610da081610d40565b809150509250925092565b60008060408385031215610dbe57600080fd5b8235915060208301356001600160401b03811115610ddb57600080fd5b610de785828601610c45565b9150509250929050565b600082601f830112610e0257600080fd5b81356020610e12610bca83610b43565b82815260059290921b84018101918181019086841115610e3157600080fd5b8286015b84811015610e705780356001600160401b03811115610e545760008081fd5b610e628986838b0101610c45565b845250918301918301610e35565b509695505050505050565b60008060408385031215610e8e57600080fd5b82356001600160401b0380821115610ea557600080fd5b610eb186838701610df1565b93506020850135915080821115610ec757600080fd5b50610de785828601610df1565b60008060408385031215610ee757600080fd5b82356001600160401b0380821115610efe57600080fd5b610f0a86838701610c45565b93506020850135915080821115610f2057600080fd5b50610de785828601610c45565b600060208284031215610f3f57600080fd5b610d3982610b66565b60008060408385031215610f5b57600080fd5b82356001600160401b03811115610f7157600080fd5b610f7d85828601610c45565b9250506020830135610f8e81610d40565b809150509250929050565b60008060408385031215610fac57600080fd5b610fb583610b66565b91506020830135610f8e81610d40565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561102b5761102b611001565b5060010190565b60008161104157611041611001565b506000190190565b6001600160a01b038316815260406020820181905260009061061690830184610cfa565b60006020828403121561107f57600080fd5b81516001600160401b0381111561109557600080fd5b8201601f810184136110a657600080fd5b80516110b4610bca82610c1e565b8181528560208385010111156110c957600080fd5b6110da826020830160208601610cca565b95945050505050565b8381526060602082015260006110fc6060830185610cfa565b90508215156040830152949350505050565b60006020828403121561112057600080fd5b8151610d3981610d40565b63ffffffff831681526040602082015260006106166040830184610cfa565b6001600160a01b038416815260606020820181905260009061116e90830185610cfa565b82810360408401526111808185610cfa565b9695505050505050565b6001600160a01b03841681526060602082018190526000906110fc90830185610cfa565b600082516111c0818460208701610cca565b919091019291505056fea26469706673582212203d63188b3cb4f177f6d7ecd49d367b9c107ea5d8393fc19da21654c05890f4df64736f6c634300080c0033";
    const isSuperArgs = (xs) => xs.length > 1;
    class InfinityMintFlags__factory extends ethers_1.ContractFactory {
        constructor(...args) {
            if (isSuperArgs(args)) {
                super(...args);
            }
            else {
                super(_abi, _bytecode, args[0]);
            }
        }
        deploy(storageDestination, erc721Destination, overrides) {
            return super.deploy(storageDestination, erc721Destination, overrides || {});
        }
        getDeployTransaction(storageDestination, erc721Destination, overrides) {
            return super.getDeployTransaction(storageDestination, erc721Destination, overrides || {});
        }
        attach(address) {
            return super.attach(address);
        }
        connect(signer) {
            return super.connect(signer);
        }
        static createInterface() {
            return new ethers_1.utils.Interface(_abi);
        }
        static connect(address, signerOrProvider) {
            return new ethers_1.Contract(address, _abi, signerOrProvider);
        }
    }
    exports.InfinityMintFlags__factory = InfinityMintFlags__factory;
    InfinityMintFlags__factory.bytecode = _bytecode;
    InfinityMintFlags__factory.abi = _abi;
});
//# sourceMappingURL=InfinityMintFlags__factory.js.map