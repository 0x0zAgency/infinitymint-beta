(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "ethers"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultMinter__factory = void 0;
    /* Autogenerated file. Do not edit manually. */
    /* tslint:disable */
    /* eslint-disable */
    const ethers_1 = require("ethers");
    const _abi = [
        {
            inputs: [
                {
                    internalType: "address",
                    name: "valuesContract",
                    type: "address",
                },
                {
                    internalType: "address",
                    name: "storageContract",
                    type: "address",
                },
                {
                    internalType: "address",
                    name: "assetContract",
                    type: "address",
                },
                {
                    internalType: "address",
                    name: "randomNumberContract",
                    type: "address",
                },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "changee",
                    type: "address",
                },
                {
                    indexed: false,
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "PermissionChange",
            type: "event",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "from",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "to",
                    type: "address",
                },
            ],
            name: "TransferedOwnership",
            type: "event",
        },
        {
            inputs: [],
            name: "approvalCount",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            name: "approved",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "assetController",
            outputs: [
                {
                    internalType: "contract Asset",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "deployer",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint32",
                    name: "currentTokenId",
                    type: "uint32",
                },
                {
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
            ],
            name: "getPreview",
            outputs: [
                {
                    internalType: "uint256",
                    name: "previewCount",
                    type: "uint256",
                },
            ],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "isAuthenticated",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint32",
                    name: "currentTokenId",
                    type: "uint32",
                },
                {
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    internalType: "bytes",
                    name: "",
                    type: "bytes",
                },
            ],
            name: "mint",
            outputs: [
                {
                    components: [
                        {
                            internalType: "uint32",
                            name: "pathId",
                            type: "uint32",
                        },
                        {
                            internalType: "uint32",
                            name: "currentTokenId",
                            type: "uint32",
                        },
                        {
                            internalType: "address",
                            name: "owner",
                            type: "address",
                        },
                        {
                            internalType: "uint32[]",
                            name: "colours",
                            type: "uint32[]",
                        },
                        {
                            internalType: "bytes",
                            name: "mintData",
                            type: "bytes",
                        },
                        {
                            internalType: "uint32[]",
                            name: "assets",
                            type: "uint32[]",
                        },
                        {
                            internalType: "uint32[]",
                            name: "names",
                            type: "uint32[]",
                        },
                        {
                            internalType: "address[]",
                            name: "destinations",
                            type: "address[]",
                        },
                    ],
                    internalType: "struct InfinityMintObject.InfinityObject",
                    name: "",
                    type: "tuple",
                },
            ],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint32",
                    name: "index",
                    type: "uint32",
                },
                {
                    internalType: "uint32",
                    name: "currentTokenId",
                    type: "uint32",
                },
                {
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
            ],
            name: "mintPreview",
            outputs: [
                {
                    components: [
                        {
                            internalType: "uint32",
                            name: "pathId",
                            type: "uint32",
                        },
                        {
                            internalType: "uint32",
                            name: "currentTokenId",
                            type: "uint32",
                        },
                        {
                            internalType: "address",
                            name: "owner",
                            type: "address",
                        },
                        {
                            internalType: "uint32[]",
                            name: "colours",
                            type: "uint32[]",
                        },
                        {
                            internalType: "bytes",
                            name: "mintData",
                            type: "bytes",
                        },
                        {
                            internalType: "uint32[]",
                            name: "assets",
                            type: "uint32[]",
                        },
                        {
                            internalType: "uint32[]",
                            name: "names",
                            type: "uint32[]",
                        },
                        {
                            internalType: "address[]",
                            name: "destinations",
                            type: "address[]",
                        },
                    ],
                    internalType: "struct InfinityMintObject.InfinityObject",
                    name: "",
                    type: "tuple",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiApprove",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiRevoke",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "randomNumberController",
            outputs: [
                {
                    internalType: "contract RandomNumber",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "assetContract",
                    type: "address",
                },
            ],
            name: "setAssetController",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
                {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "setPrivilages",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "randomNumberContract",
                    type: "address",
                },
            ],
            name: "setRandomNumberController",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "storageContract",
                    type: "address",
                },
            ],
            name: "setStorageController",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "storageController",
            outputs: [
                {
                    internalType: "contract InfinityMintStorage",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "valuesController",
            outputs: [
                {
                    internalType: "contract InfinityMintValues",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
    ];
    const _bytecode = "0x60806040523480156200001157600080fd5b5060405162002078380380620020788339810160408190526200003491620000d1565b60008054336001600160a01b0319918216811783558252600360205260408220805460ff191660019081179091558290556002919091556005805482166001600160a01b0396871617905560068054821694861694909417909355600480548416928516929092179091556007805490921692169190911790556200012e565b80516001600160a01b0381168114620000cc57600080fd5b919050565b60008060008060808587031215620000e857600080fd5b620000f385620000b4565b93506200010360208601620000b4565b92506200011360408601620000b4565b91506200012360608601620000b4565b905092959194509250565b611f3a806200013e6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c80630c380cf0146100eb57806310a8c7a91461011b5780631a5dad51146101305780631bc8bf931461015157806331ed86d2146101715780634c73947614610184578063573f8600146101975780636884d0a6146101aa5780636fa13f3c146101b35780639bb2ad88146101c6578063aed5ef82146101d9578063d15d4150146101ec578063d5f394881461020f578063d8b964e614610222578063ec2b46c314610245578063f2fde38b14610258578063fe528b181461026b578063fe684c0e1461027e575b600080fd5b6005546100fe906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012e6101293660046113f4565b610291565b005b61014361013e3660046114a4565b610347565b604051908152602001610112565b61016461015f366004611504565b61090e565b604051610112919061173a565b61012e61017f3660046113f4565b610ab2565b61012e610192366004611754565b610b5b565b6004546100fe906001600160a01b031681565b61014360025481565b61012e6101c1366004611754565b610bf6565b6101646101d4366004611771565b610c91565b6007546100fe906001600160a01b031681565b6101ff6101fa366004611754565b610e5b565b6040519015158152602001610112565b6000546100fe906001600160a01b031681565b6101ff610230366004611754565b60036020526000908152604090205460ff1681565b6006546100fe906001600160a01b031681565b61012e610266366004611754565b610e92565b61012e610279366004611754565b610f32565b61012e61028c3660046117bc565b610fcd565b6000546001600160a01b031633146102c45760405162461bcd60e51b81526004016102bb906117ef565b60405180910390fd5b80516102cf57600080fd5b60005b8151811015610343576001600360008484815181106102f3576102f3611815565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161033683611841565b90915550506001016102d2565b5050565b600080546001600160a01b031633148061037057503360009081526003602052604090205460ff165b610379336110f1565b610382306110f1565b60405160200161039392919061185c565b604051602081830303815290604052906103c05760405162461bcd60e51b81526004016102bb91906118b8565b5060055460405163e7b6dac960e01b815260206004820152600c60248201526b1c1c995d9a595dd0dbdd5b9d60a21b60448201526001600160a01b039091169063e7b6dac990606401602060405180830381865afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a91906118cb565b90508061045657610908565b60075460055460405163e7b6dac960e01b81526020600482015260096024820152681b985b5950dbdd5b9d60ba1b60448201526000926001600160a01b039081169263a0d0ca0f9291169063e7b6dac990606401602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906118cb565b6040518263ffffffff1660e01b815260040161050991815260200190565b6020604051808303816000875af1158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c91906118cb565b6004805460075460405163433ee8cd60e01b81529394506000936001600160a01b039283169363433ee8cd93610587938b93911691016118e4565b6000604051808303816000875af11580156105a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ce91908101906119ca565b60048054604080516346e4e7c960e01b815290519394506000936106899385936001600160a01b0316926346e4e7c992818301926020928290030181865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611ab3565b60208501516040860151606087015160808801518b60005b604051908082528060200260200182016040528015610683578160200160208202803683370190505b50611238565b60065460405163d9f2114160e01b81529192506001600160a01b03169063d9f21141906106bf9088906000908690600401611ad0565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b506001925050505b848163ffffffff1610156109035763ffffffff81166020830152600480548351600754604051638e6e826d60e01b81526001600160a01b0393841694638e6e826d9461074494931691016118e4565b6000604051808303816000875af1158015610763573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078b9190810190611af7565b60a083015260048054835160075460405163eb2c2da360e01b81526001600160a01b039384169463eb2c2da3946107c594931691016118e4565b6000604051808303816000875af11580156107e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080c9190810190611af7565b606083015260048054600754604051632637f35160e11b81529283018790526001600160a01b0390811660248401521690634c6fe6a2906044016000604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088d9190810190611af7565b60c083015260065460405163d9f2114160e01b81526001600160a01b039091169063d9f21141906108c690899085908790600401611b2b565b600060405180830381600087803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b505050508060010190506106f5565b505050505b92915050565b6109166112ce565b6000546001600160a01b031633148061093e57503360009081526003602052604090205460ff165b610947336110f1565b610950306110f1565b60405160200161096192919061185c565b6040516020818303038152906040529061098e5760405162461bcd60e51b81526004016102bb91906118b8565b506004805460075460405163433ee8cd60e01b81526000936001600160a01b039384169363433ee8cd936109c9938b939190921691016118e4565b6000604051808303816000875af11580156109e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a1091908101906119ca565b9050610aa985600460009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d9190611ab3565b60208401516040850151606086015160808701518a600061065a565b95945050505050565b6000546001600160a01b03163314610adc5760405162461bcd60e51b81526004016102bb906117ef565b8051610ae757600080fd5b60005b815181101561034357600060036000848481518110610b0b57610b0b611815565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff1916921515929092179091556002805491610b4e83611b5b565b9091555050600101610aea565b6000546001600160a01b0316331480610b8357503360009081526003602052604090205460ff165b610b8c336110f1565b610b95306110f1565b604051602001610ba692919061185c565b60405160208183030381529060405290610bd35760405162461bcd60e51b81526004016102bb91906118b8565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610c1e57503360009081526003602052604090205460ff165b610c27336110f1565b610c30306110f1565b604051602001610c4192919061185c565b60405160208183030381529060405290610c6e5760405162461bcd60e51b81526004016102bb91906118b8565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b610c996112ce565b6000546001600160a01b0316331480610cc157503360009081526003602052604090205460ff165b610cca336110f1565b610cd3306110f1565b604051602001610ce492919061185c565b60405160208183030381529060405290610d115760405162461bcd60e51b81526004016102bb91906118b8565b5060065460405163fccc3cd560e01b81526001600160a01b03848116600483015263ffffffff87166024830152600092169063fccc3cd590604401600060405180830381865afa158015610d69573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d919190810190611be1565b9050826001600160a01b031681604001516001600160a01b031614610de45760405162461bcd60e51b81526020600482015260096024820152683130b21037bbb732b960b91b60448201526064016102bb565b8463ffffffff16816020015163ffffffff1614610e2f5760405162461bcd60e51b81526020600482015260096024820152680c4c2c840d2dcc8caf60bb1b60448201526064016102bb565b610aa98482600001518360a001518460c001518560600151866080015187604001518860e00151611238565b600080546001600160a01b03838116911614806109085750506001600160a01b031660009081526003602052604090205460ff1690565b6000546001600160a01b03163314610ebc5760405162461bcd60e51b81526004016102bb906117ef565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b0316331480610f5a57503360009081526003602052604090205460ff165b610f63336110f1565b610f6c306110f1565b604051602001610f7d92919061185c565b60405160208183030381529060405290610faa5760405162461bcd60e51b81526004016102bb91906118b8565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610ff75760405162461bcd60e51b81526004016102bb906117ef565b6000546001600160a01b038381169116141561104e5760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016102bb565b6001600160a01b0382166000908152600360205260409020805460ff19168215801591909117909155611095576002805490600061108b83611841565b91905055506110ab565b600280549060006110a583611b5b565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b601481101561123157600061112e826013611d11565b611139906008611d28565b611144906002611e2b565b611157906001600160a01b038716611e4d565b60f81b9050600060108260f81c61116e9190611e61565b60f81b905060008160f81c60106111859190611e83565b8360f81c6111939190611ea4565b60f81b90506111a182611293565b856111ad866002611d28565b815181106111bd576111bd611815565b60200101906001600160f81b031916908160001a9053506111dd81611293565b856111e9866002611d28565b6111f4906001611ec7565b8151811061120457611204611815565b60200101906001600160f81b031916908160001a905350505050808061122990611841565b915050611118565b5092915050565b6112406112ce565b50604080516101008101825263ffffffff98891681529890971660208901526001600160a01b03909116958701959095526060860191909152608085015260a084019190915260c083015260e082015290565b6000600a60f883901c10156112ba576112b160f883901c6030611edf565b60f81b92915050565b6112b160f883901c6057611edf565b919050565b604051806101000160405280600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561136057611360611328565b60405290565b60405161010081016001600160401b038111828210171561136057611360611328565b604051601f8201601f191681016001600160401b03811182821017156113b1576113b1611328565b604052919050565b60006001600160401b038211156113d2576113d2611328565b5060051b60200190565b6001600160a01b03811681146113f157600080fd5b50565b6000602080838503121561140757600080fd5b82356001600160401b0381111561141d57600080fd5b8301601f8101851361142e57600080fd5b803561144161143c826113b9565b611389565b81815260059190911b8201830190838101908783111561146057600080fd5b928401925b82841015611487578335611478816113dc565b82529284019290840190611465565b979650505050505050565b63ffffffff811681146113f157600080fd5b600080604083850312156114b757600080fd5b82356114c281611492565b915060208301356114d2816113dc565b809150509250929050565b60006001600160401b038211156114f6576114f6611328565b50601f01601f191660200190565b60008060006060848603121561151957600080fd5b833561152481611492565b92506020840135611534816113dc565b915060408401356001600160401b0381111561154f57600080fd5b8401601f8101861361156057600080fd5b803561156e61143c826114dd565b81815287602083850101111561158357600080fd5b816020840160208301376000602083830101528093505050509250925092565b600081518084526020808501945080840160005b838110156115d957815163ffffffff16875295820195908201906001016115b7565b509495945050505050565b60005b838110156115ff5781810151838201526020016115e7565b8381111561160e576000848401525b50505050565b6000815180845261162c8160208601602086016115e4565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156115d95781516001600160a01b031687529582019590820190600101611654565b805163ffffffff1682526000610100602083015161169f602086018263ffffffff169052565b5060408301516116ba60408601826001600160a01b03169052565b5060608301518160608601526116d2828601826115a3565b915050608083015184820360808601526116ec8282611614565b91505060a083015184820360a086015261170682826115a3565b91505060c083015184820360c086015261172082826115a3565b91505060e083015184820360e0860152610aa98282611640565b60208152600061174d6020830184611679565b9392505050565b60006020828403121561176657600080fd5b813561174d816113dc565b60008060006060848603121561178657600080fd5b833561179181611492565b925060208401356117a181611492565b915060408401356117b1816113dc565b809150509250925092565b600080604083850312156117cf57600080fd5b82356117da816113dc565b9150602083013580151581146114d257600080fd5b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118555761185561182b565b5060010190565b61060f60f31b8152600083516118798160028501602088016115e4565b72040dcdee840c2e0e0e4deeccac840dedc4060f606b1b60029184019182015283516118ac8160158401602088016115e4565b01601501949350505050565b60208152600061174d6020830184611614565b6000602082840312156118dd57600080fd5b5051919050565b63ffffffff9290921682526001600160a01b0316602082015260400190565b80516112c981611492565b600082601f83011261191f57600080fd5b8151602061192f61143c836113b9565b82815260059290921b8401810191818101908684111561194e57600080fd5b8286015b8481101561197257805161196581611492565b8352918301918301611952565b509695505050505050565b600082601f83011261198e57600080fd5b815161199c61143c826114dd565b8181528460208386010111156119b157600080fd5b6119c28260208301602087016115e4565b949350505050565b6000602082840312156119dc57600080fd5b81516001600160401b03808211156119f357600080fd5b9083019060a08286031215611a0757600080fd5b611a0f61133e565b611a1883611903565b8152602083015182811115611a2c57600080fd5b611a388782860161190e565b602083015250604083015182811115611a5057600080fd5b611a5c8782860161190e565b604083015250606083015182811115611a7457600080fd5b611a808782860161190e565b606083015250608083015182811115611a9857600080fd5b611aa48782860161197d565b60808301525095945050505050565b600060208284031215611ac557600080fd5b815161174d81611492565b60018060a01b0384168152826020820152606060408201526000610aa96060830184611679565b600060208284031215611b0957600080fd5b81516001600160401b03811115611b1f57600080fd5b6119c28482850161190e565b6001600160a01b038416815263ffffffff83166020820152606060408201819052600090610aa990830184611679565b600081611b6a57611b6a61182b565b506000190190565b80516112c9816113dc565b600082601f830112611b8e57600080fd5b81516020611b9e61143c836113b9565b82815260059290921b84018101918181019086841115611bbd57600080fd5b8286015b84811015611972578051611bd4816113dc565b8352918301918301611bc1565b600060208284031215611bf357600080fd5b81516001600160401b0380821115611c0a57600080fd5b908301906101008286031215611c1f57600080fd5b611c27611366565b611c3083611903565b8152611c3e60208401611903565b6020820152611c4f60408401611b72565b6040820152606083015182811115611c6657600080fd5b611c728782860161190e565b606083015250608083015182811115611c8a57600080fd5b611c968782860161197d565b60808301525060a083015182811115611cae57600080fd5b611cba8782860161190e565b60a08301525060c083015182811115611cd257600080fd5b611cde8782860161190e565b60c08301525060e083015182811115611cf657600080fd5b611d0287828601611b7d565b60e08301525095945050505050565b600082821015611d2357611d2361182b565b500390565b6000816000190483118215151615611d4257611d4261182b565b500290565b600181815b80851115611d82578160001904821115611d6857611d6861182b565b80851615611d7557918102915b93841c9390800290611d4c565b509250929050565b600082611d9957506001610908565b81611da657506000610908565b8160018114611dbc5760028114611dc657611de2565b6001915050610908565b60ff841115611dd757611dd761182b565b50506001821b610908565b5060208310610133831016604e8410600b8410161715611e05575081810a610908565b611e0f8383611d47565b8060001904821115611e2357611e2361182b565b029392505050565b600061174d8383611d8a565b634e487b7160e01b600052601260045260246000fd5b600082611e5c57611e5c611e37565b500490565b600060ff831680611e7457611e74611e37565b8060ff84160491505092915050565b600060ff821660ff84168160ff0481118215151615611e2357611e2361182b565b600060ff821660ff841680821015611ebe57611ebe61182b565b90039392505050565b60008219821115611eda57611eda61182b565b500190565b600060ff821660ff84168060ff03821115611efc57611efc61182b565b01939250505056fea26469706673582212200ceff2a6594739f9a6d6c9a67015d3cd54c6b3492613b7ff64919d38110acfa064736f6c634300080c0033";
    const isSuperArgs = (xs) => xs.length > 1;
    class DefaultMinter__factory extends ethers_1.ContractFactory {
        constructor(...args) {
            if (isSuperArgs(args)) {
                super(...args);
            }
            else {
                super(_abi, _bytecode, args[0]);
            }
        }
        deploy(valuesContract, storageContract, assetContract, randomNumberContract, overrides) {
            return super.deploy(valuesContract, storageContract, assetContract, randomNumberContract, overrides || {});
        }
        getDeployTransaction(valuesContract, storageContract, assetContract, randomNumberContract, overrides) {
            return super.getDeployTransaction(valuesContract, storageContract, assetContract, randomNumberContract, overrides || {});
        }
        attach(address) {
            return super.attach(address);
        }
        connect(signer) {
            return super.connect(signer);
        }
        static createInterface() {
            return new ethers_1.utils.Interface(_abi);
        }
        static connect(address, signerOrProvider) {
            return new ethers_1.Contract(address, _abi, signerOrProvider);
        }
    }
    exports.DefaultMinter__factory = DefaultMinter__factory;
    DefaultMinter__factory.bytecode = _bytecode;
    DefaultMinter__factory.abi = _abi;
});
//# sourceMappingURL=DefaultMinter__factory.js.map