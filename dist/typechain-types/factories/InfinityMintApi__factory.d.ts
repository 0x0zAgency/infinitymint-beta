import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { InfinityMintApi, InfinityMintApiInterface } from "../InfinityMintApi";
type InfinityMintApiConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class InfinityMintApi__factory extends ContractFactory {
    constructor(...args: InfinityMintApiConstructorParams);
    deploy(erc721Destination: PromiseOrValue<string>, storageDestination: PromiseOrValue<string>, assetDestination: PromiseOrValue<string>, valuesDestination: PromiseOrValue<string>, royaltyDestination: PromiseOrValue<string>, projectDestination: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<InfinityMintApi>;
    getDeployTransaction(erc721Destination: PromiseOrValue<string>, storageDestination: PromiseOrValue<string>, assetDestination: PromiseOrValue<string>, valuesDestination: PromiseOrValue<string>, royaltyDestination: PromiseOrValue<string>, projectDestination: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): InfinityMintApi;
    connect(signer: Signer): InfinityMintApi__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b50604051620022b2380380620022b28339810160408190526200003491620000c4565b600080546001600160a01b03199081166001600160a01b039889161790915560018054821696881696909617909555600280548616948716949094179093556003805485169286169290921790915560048054841691851691909117905560058054909216921691909117905562000145565b80516001600160a01b0381168114620000bf57600080fd5b919050565b60008060008060008060c08789031215620000de57600080fd5b620000e987620000a7565b9550620000f960208801620000a7565b94506200010960408801620000a7565b93506200011960608801620000a7565b92506200012960808801620000a7565b91506200013960a08801620000a7565b90509295509295509295565b61215d80620001556000396000f3fe608060405234801561001057600080fd5b506004361061013e5760003560e01c806308805342146101435780630c380cf01461016c5780630e4937351461018c578063105c4813146101ad57806310c28cf3146101c057806318160ddd146101d75780631f21bfbf146101df57806329fd769e146101f45780633aec3519146102075780633ebdfda11461021a5780634a90ab111461023a578063573f86001461024f5780637e356acd146102625780639437b1121461028257806395ded45c1461029557806398d5fdca146102a8578063a1d2b6ac146102b0578063bca6ce64146102c3578063c04a4791146102d6578063d12b66af146102f9578063d8a26e3a1461030c578063e57259681461031f578063e7cbd61d14610332578063ec2b46c314610345578063ef5bee3b14610358578063f0f3f2c81461036b575b600080fd5b610156610151366004611541565b61038d565b60405161016391906115ba565b60405180910390f35b60035461017f906001600160a01b031681565b60405161016391906115cd565b61019f61019a366004611541565b610498565b604051908152602001610163565b60045461017f906001600160a01b031681565b6101c8610574565b604051610163939291906115e1565b61019f6106f1565b6101e761077d565b6040516101639190611617565b61017f610202366004611541565b6107f4565b61017f610215366004611541565b61088e565b61022d610228366004611541565b6108e7565b60405161016391906116a2565b61024d61024836600461187d565b610964565b005b60025461017f906001600160a01b031681565b6102756102703660046118f5565b610a8d565b6040516101639190611912565b61019f6102903660046118f5565b610ce9565b6102756102a33660046118f5565b610e32565b61019f610f88565b60055461017f906001600160a01b031681565b60005461017f906001600160a01b031681565b6102e96102e43660046118f5565b610fdd565b6040519015158152602001610163565b61024d610307366004611925565b611057565b61022d61031a366004611541565b61114c565b61019f61032d3660046118f5565b611184565b61024d610340366004611988565b6111f6565b60015461017f906001600160a01b031681565b61017f6103663660046119d9565b6112b5565b61037e610379366004611a05565b6113df565b60405161016393929190611a1e565b60005460408051629a9b7b60e01b815290516060926001600160a01b031691629a9b7b9160048083019260209291908290030181865afa1580156103d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f99190611a67565b63ffffffff168263ffffffff161061041057600080fd5b600154604051636c51371d60e11b81526000916001600160a01b03169063d8a26e3a90610441908690600401611617565b600060405180830381865afa15801561045e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104869190810190611ce3565b905061049181611462565b9392505050565b6000806104a68360006112b5565b90506001600160a01b0381166104bf5750600092915050565b60408051600481526024810182526020810180516001600160e01b031663c6e48e2360e01b179052905160009182916001600160a01b0385169161050291611d17565b600060405180830381855afa9150503d806000811461053d576040519150601f19603f3d011682016040523d82523d6000602084013e610542565b606091505b50915091508161055757506000949350505050565b8080602001905181019061056b9190611d33565b95945050505050565b6060806000600560009054906101000a90046001600160a01b03166001600160a01b0316636e57b7006040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f49190810190611d4c565b600560009054906101000a90046001600160a01b03166001600160a01b0316634e275bcb6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261066f9190810190611d4c565b600560009054906101000a90046001600160a01b03166001600160a01b031663fabec44a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190611d33565b925092509250909192565b60035460405163e7b6dac960e01b81526020600482015260096024820152686d6178537570706c7960b81b60448201526000916001600160a01b03169063e7b6dac990606401602060405180830381865afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190611d33565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316629a9b7b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190611a67565b60035460405163e7b6dac960e01b815260206004820152600f60248201526e0d8d2dcd6aec2d8d8cae892dcc8caf608b1b60448201526000916108889184916001600160a01b03169063e7b6dac9906064015b602060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103669190611d33565b92915050565b60035460405163e7b6dac960e01b81526020600482015260116024820152700d8d2dcd6a6e8d2c6d6cae4e692dcc8caf607b1b60448201526000916108889184916001600160a01b03169063e7b6dac990606401610847565b6108ef6114d2565b6001546001600160a01b031663fccc3cd533846040518363ffffffff1660e01b815260040161091f929190611d80565b600060405180830381865afa15801561093c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108889190810190611ce3565b6000546001600160a01b031663430c208133856040518363ffffffff1660e01b8152600401610994929190611d80565b602060405180830381865afa1580156109b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d59190611d9f565b610a225760405162461bcd60e51b81526020600482015260196024820152781b5d5cdd081899481bdddb995c881bdc88185c1c1c9bdd9959603a1b60448201526064015b60405180910390fd5b600154604051638180a71760e01b81526001600160a01b0390911690638180a71790610a5690869086908690600401611dbc565b600060405180830381600087803b158015610a7057600080fd5b505af1158015610a84573d6000803e3d6000fd5b50505050505050565b60606001600160a01b038216610af35760405162461bcd60e51b815260206004820152602560248201527f63616e6e6f74207669657720707265766965777320666f72206e756c6c206164604482015264647265737360d81b6064820152608401610a19565b60015460035460405163e7b6dac960e01b81526000926001600160a01b0390811692636407a4009287929091169063e7b6dac990610b3390600401611ded565b602060405180830381865afa158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611d33565b6040518363ffffffff1660e01b8152600401610b91929190611e13565b600060405180830381865afa158015610bae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bd69190810190611e2c565b90506000805b8251811015610c3257846001600160a01b0316838281518110610c0157610c01611edc565b6020026020010151604001516001600160a01b03161415610c2a5781610c2681611ef2565b9250505b600101610bdc565b508015610cd3576000816001600160401b03811115610c5357610c53611783565b604051908082528060200260200182016040528015610c7c578160200160208202803683370190505b5090506000915060005b8351811015610cca57808284610c9b81611ef2565b955081518110610cad57610cad611edc565b63ffffffff90921660209283029190910190910152600101610c86565b50949350505050565b6040805160008082526020820190925290610cca565b60015460035460405163e7b6dac960e01b815260009283926001600160a01b0391821692636407a400928792169063e7b6dac990610d2990600401611ded565b602060405180830381865afa158015610d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6a9190611d33565b6040518363ffffffff1660e01b8152600401610d87929190611e13565b600060405180830381865afa158015610da4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dcc9190810190611e2c565b90506000915060005b8151811015610e2b57836001600160a01b0316828281518110610dfa57610dfa611edc565b6020026020010151604001516001600160a01b03161415610e235782610e1f81611ef2565b9350505b600101610dd5565b5050919050565b6003546040516206259160e71b815260206004820152601760248201527664697361626c6552656769737465726564546f6b656e7360481b60448201526060916001600160a01b031690630312c88090606401602060405180830381865afa158015610ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec69190611d9f565b15610f135760405162461bcd60e51b815260206004820152601d60248201527f616c6c20746f6b656e73206d6574686f642069732064697361626c65640000006044820152606401610a19565b60015460405163495c94dd60e01b81526001600160a01b039091169063495c94dd90610f439085906004016115cd565b600060405180830381865afa158015610f60573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108889190810190611f1b565b6000600460009054906101000a90046001600160a01b03166001600160a01b0316637ff9b5966040518163ffffffff1660e01b8152600401602060405180830381865afa158015610754573d6000803e3d6000fd5b600154604051631cae4b2d60e31b81526000916001600160a01b03169063e57259689061100e9085906004016115cd565b602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f9190611d33565b421092915050565b600080546001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161108691906115cd565b602060405180830381865afa1580156110a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c79190611d33565b116110e45760405162461bcd60e51b8152600401610a1990611f4f565b6001546001600160a01b0316631774bc3b3384846040518463ffffffff1660e01b815260040161111693929190611f84565b600060405180830381600087803b15801561113057600080fd5b505af1158015611144573d6000803e3d6000fd5b505050505050565b6111546114d2565b600154604051636c51371d60e11b81526001600160a01b039091169063d8a26e3a9061091f908590600401611617565b600154604051631cae4b2d60e31b81526000916001600160a01b03169063e5725968906111b59085906004016115cd565b602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190611d33565b600080546001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161122591906115cd565b602060405180830381865afa158015611242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112669190611d33565b116112835760405162461bcd60e51b8152600401610a1990611f4f565b6001546001600160a01b031663a820ab973384846040518463ffffffff1660e01b815260040161111693929190611fba565b600154604051636c51371d60e11b81526000916001600160a01b03169063d8a26e3a906112e6908690600401611617565b600060405180830381865afa158015611303573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261132b9190810190611ce3565b60e00151518363ffffffff16111561134557506000610888565b600154604051636c51371d60e11b81526001600160a01b039091169063d8a26e3a90611375908690600401611617565b600060405180830381865afa158015611392573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113ba9190810190611ce3565b60e0015182815181106113cf576113cf611edc565b6020026020010151905092915050565b60055460405163b88da75960e01b815260048101839052606091829182916001600160a01b03169063b88da75990602401600060405180830381865afa15801561142d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114559190810190611fde565b9250925092509193909250565b606081600001518260200151836040015184606001516040516020016114889190611912565b60408051601f1981840301815290829052608087015160a088015160c089015160e08a01516114bc98979695602001612065565b6040516020818303038152906040529050919050565b604051806101000160405280600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b63ffffffff8116811461153e57600080fd5b50565b60006020828403121561155357600080fd5b81356104918161152c565b60005b83811015611579578181015183820152602001611561565b83811115611588576000848401525b50505050565b600081518084526115a681602086016020860161155e565b601f01601f19169290920160200192915050565b602081526000610491602083018461158e565b6001600160a01b0391909116815260200190565b6060815260006115f4606083018661158e565b8281036020840152611606818661158e565b915050826040830152949350505050565b63ffffffff91909116815260200190565b600081518084526020808501945080840160005b8381101561165e57815163ffffffff168752958201959082019060010161163c565b509495945050505050565b600081518084526020808501945080840160005b8381101561165e5781516001600160a01b03168752958201959082019060010161167d565b602081526116b960208201835163ffffffff169052565b600060208301516116d2604084018263ffffffff169052565b5060408301516001600160a01b0381166060840152506060830151610100806080850152611704610120850183611628565b91506080850151601f19808685030160a0870152611722848361158e565b935060a08701519150808685030160c087015261173f8483611628565b935060c08701519150808685030160e087015261175c8483611628565b935060e08701519150808685030183870152506117798382611669565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156117bc576117bc611783565b60405290565b604051601f8201601f191681016001600160401b03811182821017156117ea576117ea611783565b604052919050565b60006001600160401b0382111561180b5761180b611783565b50601f01601f191660200190565b600082601f83011261182a57600080fd5b813561183d611838826117f2565b6117c2565b81815284602083860101111561185257600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461153e57600080fd5b60008060006060848603121561189257600080fd5b833561189d8161152c565b925060208401356001600160401b038111156118b857600080fd5b6118c486828701611819565b92505060408401356118d58161186f565b809150509250925092565b6001600160a01b038116811461153e57600080fd5b60006020828403121561190757600080fd5b8135610491816118e0565b6020815260006104916020830184611628565b6000806040838503121561193857600080fd5b82356001600160401b038082111561194f57600080fd5b61195b86838701611819565b9350602085013591508082111561197157600080fd5b5061197e85828601611819565b9150509250929050565b6000806040838503121561199b57600080fd5b82356001600160401b038111156119b157600080fd5b6119bd85828601611819565b92505060208301356119ce8161186f565b809150509250929050565b600080604083850312156119ec57600080fd5b82356119f78161152c565b946020939093013593505050565b600060208284031215611a1757600080fd5b5035919050565b606081526000611a31606083018661158e565b8281036020840152611a43818661158e565b90508281036040840152611779818561158e565b8051611a628161152c565b919050565b600060208284031215611a7957600080fd5b81516104918161152c565b8051611a62816118e0565b60006001600160401b03821115611aa857611aa8611783565b5060051b60200190565b600082601f830112611ac357600080fd5b81516020611ad361183883611a8f565b82815260059290921b84018101918181019086841115611af257600080fd5b8286015b84811015611b16578051611b098161152c565b8352918301918301611af6565b509695505050505050565b600082601f830112611b3257600080fd5b8151611b40611838826117f2565b818152846020838601011115611b5557600080fd5b611b6682602083016020870161155e565b949350505050565b600082601f830112611b7f57600080fd5b81516020611b8f61183883611a8f565b82815260059290921b84018101918181019086841115611bae57600080fd5b8286015b84811015611b16578051611bc5816118e0565b8352918301918301611bb2565b60006101008284031215611be557600080fd5b611bed611799565b9050611bf882611a57565b8152611c0660208301611a57565b6020820152611c1760408301611a84565b604082015260608201516001600160401b0380821115611c3657600080fd5b611c4285838601611ab2565b60608401526080840151915080821115611c5b57600080fd5b611c6785838601611b21565b608084015260a0840151915080821115611c8057600080fd5b611c8c85838601611ab2565b60a084015260c0840151915080821115611ca557600080fd5b611cb185838601611ab2565b60c084015260e0840151915080821115611cca57600080fd5b50611cd784828501611b6e565b60e08301525092915050565b600060208284031215611cf557600080fd5b81516001600160401b03811115611d0b57600080fd5b611b6684828501611bd2565b60008251611d2981846020870161155e565b9190910192915050565b600060208284031215611d4557600080fd5b5051919050565b600060208284031215611d5e57600080fd5b81516001600160401b03811115611d7457600080fd5b611b6684828501611b21565b6001600160a01b0392909216825263ffffffff16602082015260400190565b600060208284031215611db157600080fd5b81516104918161186f565b63ffffffff84168152606060208201526000611ddb606083018561158e565b90508215156040830152949350505050565b6020808252600c908201526b1c1c995d9a595dd0dbdd5b9d60a21b604082015260600190565b6001600160a01b03929092168252602082015260400190565b60006020808385031215611e3f57600080fd5b82516001600160401b0380821115611e5657600080fd5b818501915085601f830112611e6a57600080fd5b8151611e7861183882611a8f565b81815260059190911b83018401908481019088831115611e9757600080fd5b8585015b83811015611ecf57805185811115611eb35760008081fd5b611ec18b89838a0101611bd2565b845250918601918601611e9b565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611f1457634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215611f2d57600080fd5b81516001600160401b03811115611f4357600080fd5b611b6684828501611ab2565b6020808252601b908201527a36bab9ba1037bbb71030ba103632b0b9ba1037b732903a37b5b2b760291b604082015260600190565b6001600160a01b0384168152606060208201819052600090611fa89083018561158e565b8281036040840152611779818561158e565b6001600160a01b0384168152606060208201819052600090611ddb9083018561158e565b600080600060608486031215611ff357600080fd5b83516001600160401b038082111561200a57600080fd5b61201687838801611b21565b9450602086015191508082111561202c57600080fd5b61203887838801611b21565b9350604086015191508082111561204e57600080fd5b5061205b86828701611b21565b9150509250925092565b600061010063ffffffff808c1684526020818c168186015260018060a01b039150818b1660408601528260608601526120a08386018b61158e565b925084830360808601526120b4838a61158e565b925084830360a08601526120c88389611628565b925084830360c08601526120dc8388611628565b85810360e0870152865180825282880194509082019060005b818110156121135785518516835294830194918301916001016120f5565b50909e9d505050505050505050505050505056fea2646970667358221220b37e3c55409d04441f909780013ab28953a9a20b315a17bed5af8b751812d29264736f6c634300080c0033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "erc721Destination";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "storageDestination";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "assetDestination";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "valuesDestination";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "royaltyDestination";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "projectDestination";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "allTokens";
        readonly outputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "tokens";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "assetController";
        readonly outputs: readonly [{
            readonly internalType: "contract Asset";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "erc721";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMint";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }];
        readonly name: "get";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "pathId";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "currentTokenId";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "colours";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "mintData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "assets";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "names";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "destinations";
                readonly type: "address[]";
            }];
            readonly internalType: "struct InfinityMintObject.InfinityObject";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }];
        readonly name: "getBalanceOfWallet";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }];
        readonly name: "getBytes";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCurrentProject";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedUrl";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "encodedTag";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint256";
            readonly name: "index";
            readonly type: "uint256";
        }];
        readonly name: "getLink";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "index";
            readonly type: "uint32";
        }];
        readonly name: "getPreview";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "pathId";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "currentTokenId";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "colours";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "mintData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "assets";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "names";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "destinations";
                readonly type: "address[]";
            }];
            readonly internalType: "struct InfinityMintObject.InfinityObject";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "getPreviewCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "getPreviewTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "getPreviews";
        readonly outputs: readonly [{
            readonly internalType: "uint32[]";
            readonly name: "";
            readonly type: "uint32[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "version";
            readonly type: "uint256";
        }];
        readonly name: "getProject";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedProject";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "encodedTag";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "encodedInitialProject";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }];
        readonly name: "getStickerContract";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }];
        readonly name: "getWalletContract";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "isPreviewBlocked";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "projectController";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMintProject";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "royaltyController";
        readonly outputs: readonly [{
            readonly internalType: "contract Royalty";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "setFlag";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "option";
            readonly type: "string";
        }];
        readonly name: "setOption";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "tokenId";
            readonly type: "uint32";
        }, {
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "setTokenFlag";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "storageController";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMintStorage";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalMints";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "valuesController";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMintValues";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): InfinityMintApiInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): InfinityMintApi;
}
export {};
//# sourceMappingURL=InfinityMintApi__factory.d.ts.map