(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "ethers"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DefaultRoyalty__factory = void 0;
    /* Autogenerated file. Do not edit manually. */
    /* tslint:disable */
    /* eslint-disable */
    const ethers_1 = require("ethers");
    const _abi = [
        {
            inputs: [
                {
                    internalType: "address",
                    name: "valuesContract",
                    type: "address",
                },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    indexed: false,
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                },
                {
                    indexed: false,
                    internalType: "uint256",
                    name: "newTotal",
                    type: "uint256",
                },
            ],
            name: "DispensedRoyalty",
            type: "event",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "changee",
                    type: "address",
                },
                {
                    indexed: false,
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "PermissionChange",
            type: "event",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "from",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "to",
                    type: "address",
                },
            ],
            name: "TransferedOwnership",
            type: "event",
        },
        {
            inputs: [],
            name: "SPLIT_TYPE_MINT",
            outputs: [
                {
                    internalType: "uint8",
                    name: "",
                    type: "uint8",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "SPLIT_TYPE_STICKER",
            outputs: [
                {
                    internalType: "uint8",
                    name: "",
                    type: "uint8",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "approvalCount",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            name: "approved",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "_tokenPrice",
                    type: "uint256",
                },
            ],
            name: "changePrice",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            name: "counter",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "deployer",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "dispenseRoyalty",
            outputs: [
                {
                    internalType: "uint256",
                    name: "total",
                    type: "uint256",
                },
            ],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "erc721Destination",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            name: "freebies",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256",
                },
                {
                    internalType: "uint256",
                    name: "splitType",
                    type: "uint256",
                },
            ],
            name: "incrementBalance",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "isAuthenticated",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "lastTokenPrice",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiApprove",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiRevoke",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "originalTokenPrice",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "splitType",
                    type: "uint256",
                },
            ],
            name: "registerFree",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
                {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "setPrivilages",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "stickerSplit",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "tokenPrice",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            name: "values",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
    ];
    const _bytecode = "0x60806040523480156200001157600080fd5b506040516200168438038062001684833981016040819052620000349162000588565b600080546001600160a01b0319908116339081178355825260036020526040808320805460ff19166001908117909155839055600292909255600480546001600160a01b038516921682178155915163e7b6dac960e01b8152839263e7b6dac991620000c391016020808252600e908201526d62617365546f6b656e56616c756560901b604082015260600190565b602060405180830381865afa158015620000e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001079190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200016f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001959190620005ba565b620001a19190620005d4565b6008556004805460405163e7b6dac960e01b8152602092810192909252600e60248301526d62617365546f6b656e56616c756560901b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002339190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200029b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c19190620005ba565b620002cd9190620005d4565b600a556004805460405163e7b6dac960e01b8152602092810192909252600e60248301526d62617365546f6b656e56616c756560901b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa15801562000339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035f9190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa158015620003c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ed9190620005ba565b620003f99190620005d4565b6009556004805460405163e7b6dac960e01b81526064926001600160a01b039092169163e7b6dac9916200044e91016020808252600c908201526b1cdd1a58dad95c94dc1b1a5d60a21b604082015260600190565b602060405180830381865afa1580156200046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004929190620005ba565b1115620004ef5760405162461bcd60e51b815260206004820152602160248201527f737469636b65722073706c697420697320612076616c7565206f7665722031306044820152600360fc1b606482015260840160405180910390fd5b6004805460405163e7b6dac960e01b8152602092810192909252600c60248301526b1cdd1a58dad95c94dc1b1a5d60a21b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa15801562000556573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057c9190620005ba565b600b5550620006029050565b6000602082840312156200059b57600080fd5b81516001600160a01b0381168114620005b357600080fd5b9392505050565b600060208284031215620005cd57600080fd5b5051919050565b6000816000190483118215151615620005fd57634e487b7160e01b600052601160045260246000fd5b500290565b61107280620006126000396000f3fe608060405234801561001057600080fd5b50600436106101125760003560e01c806304caf36a146101175780630d494e971461012c57806310a8c7a91461014857806331ed86d21461015b5780633a9c021e1461016e57806354fe9fd7146101885780635b6bf641146101a85780636884d0a6146101b05780637ff9b596146101b9578063948509ea146101c2578063a2b40d19146101ed578063a931376914610200578063b1f525c614610209578063b64d7df114610229578063c26623f014610232578063d15d415014610252578063d5f3948814610275578063d8b964e614610288578063e8953af2146102ab578063f2fde38b146102be578063f80335a2146102d1578063fe684c0e146102e4575b600080fd5b61012a610125366004610b59565b6102f7565b005b61013560095481565b6040519081526020015b60405180910390f35b61012a610156366004610ba8565b610433565b61012a610169366004610ba8565b6104e0565b610176600081565b60405160ff909116815260200161013f565b610135610196366004610c6d565b60066020526000908152604090205481565b610176600181565b61013560025481565b61013560085481565b6005546101d5906001600160a01b031681565b6040516001600160a01b03909116815260200161013f565b61012a6101fb366004610c8f565b610589565b610135600b5481565b610135610217366004610c8f565b600d6020526000908152604090205481565b610135600a5481565b610135610240366004610c8f565b60076020526000908152604090205481565b610265610260366004610c6d565b6105bd565b604051901515815260200161013f565b6000546101d5906001600160a01b031681565b610265610296366004610c6d565b60036020526000908152604090205460ff1681565b6101356102b9366004610c6d565b6105f8565b61012a6102cc366004610c6d565b61076e565b61012a6102df366004610c8f565b61080e565b61012a6102f2366004610ca8565b6108b3565b6000546001600160a01b031633148061031f57503360009081526003602052604090205460ff165b610328336109d7565b610331306109d7565b604051602001610342929190610d14565b604051602081830303815290604052906103785760405162461bcd60e51b815260040161036f9190610d70565b60405180910390fd5b50600180600082825461038b9190610db9565b9091555050600154826103a6576103a18261080e565b61040d565b6000828152600d60205260409020546103c0906001610db9565b6000838152600d602090815260408083209390935581546001600160a01b031682526006905220546103f3908490610db9565b600080546001600160a01b03168152600660205260409020555b600154811461042e5760405162461bcd60e51b815260040161036f90610dd1565b505050565b6000546001600160a01b0316331461045d5760405162461bcd60e51b815260040161036f90610df3565b805161046857600080fd5b60005b81518110156104dc5760016003600084848151811061048c5761048c610e19565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff19169215159290921790915560028054916104cf83610e2f565b909155505060010161046b565b5050565b6000546001600160a01b0316331461050a5760405162461bcd60e51b815260040161036f90610df3565b805161051557600080fd5b60005b81518110156104dc5760006003600084848151811061053957610539610e19565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161057c83610e4a565b9091555050600101610518565b6000546001600160a01b031633146105b35760405162461bcd60e51b815260040161036f90610df3565b60088054600a5555565b600080546001600160a01b03838116911614806105f257506001600160a01b03821660009081526003602052604090205460ff165b92915050565b600080546001600160a01b031633148061062157503360009081526003602052604090205460ff165b61062a336109d7565b610633306109d7565b604051602001610644929190610d14565b604051602081830303815290604052906106715760405162461bcd60e51b815260040161036f9190610d70565b5060018060008282546106849190610db9565b90915550506001546001600160a01b0383166000908152600660205260409020546106ec5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f7220456d707479206164647265737360401b604482015260640161036f565b6001600160a01b03831660008181526006602090815260408083208054908490558151818152928301939093529194507f2cbba200147d9b2ecc06e0ff06af07d3630a1d26383fb0b6385fa32a327b7822910160405180910390a260015481146107685760405162461bcd60e51b815260040161036f90610dd1565b50919050565b6000546001600160a01b031633146107985760405162461bcd60e51b815260040161036f90610df3565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b031633148061083657503360009081526003602052604090205460ff165b61083f336109d7565b610848306109d7565b604051602001610859929190610d14565b604051602081830303815290604052906108865760405162461bcd60e51b815260040161036f9190610d70565b506000818152600760205260409020546108a1906001610db9565b60009182526007602052604090912055565b6000546001600160a01b031633146108dd5760405162461bcd60e51b815260040161036f90610df3565b6000546001600160a01b03838116911614156109345760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b604482015260640161036f565b6001600160a01b0382166000908152600360205260409020805460ff1916821580159190911790915561097b576002805490600061097183610e2f565b9190505550610991565b6002805490600061098b83610e4a565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b6014811015610b17576000610a14826013610e61565b610a1f906008610e78565b610a2a906002610f7b565b610a3d906001600160a01b038716610f9d565b60f81b9050600060108260f81c610a549190610fb1565b60f81b905060008160f81c6010610a6b9190610fd3565b8360f81c610a799190610ff4565b60f81b9050610a8782610b1e565b85610a93866002610e78565b81518110610aa357610aa3610e19565b60200101906001600160f81b031916908160001a905350610ac381610b1e565b85610acf866002610e78565b610ada906001610db9565b81518110610aea57610aea610e19565b60200101906001600160f81b031916908160001a9053505050508080610b0f90610e2f565b9150506109fe565b5092915050565b6000600a60f883901c1015610b4557610b3c60f883901c6030611017565b60f81b92915050565b610b3c60f883901c6057611017565b919050565b60008060408385031215610b6c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b0381168114610b5457600080fd5b60006020808385031215610bbb57600080fd5b823567ffffffffffffffff80821115610bd357600080fd5b818501915085601f830112610be757600080fd5b813581811115610bf957610bf9610b7b565b8060051b604051601f19603f83011681018181108582111715610c1e57610c1e610b7b565b604052918252848201925083810185019188831115610c3c57600080fd5b938501935b82851015610c6157610c5285610b91565b84529385019392850192610c41565b98975050505050505050565b600060208284031215610c7f57600080fd5b610c8882610b91565b9392505050565b600060208284031215610ca157600080fd5b5035919050565b60008060408385031215610cbb57600080fd5b610cc483610b91565b915060208301358015158114610cd957600080fd5b809150509250929050565b60005b83811015610cff578181015183820152602001610ce7565b83811115610d0e576000848401525b50505050565b61060f60f31b815260008351610d31816002850160208801610ce4565b72040dcdee840c2e0e0e4deeccac840dedc4060f606b1b6002918401918201528351610d64816015840160208801610ce4565b01601501949350505050565b6020815260008251806020840152610d8f816040850160208701610ce4565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610dcc57610dcc610da3565b500190565b60208082526008908201526772652d656e74727960c01b604082015260600190565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e4357610e43610da3565b5060010190565b600081610e5957610e59610da3565b506000190190565b600082821015610e7357610e73610da3565b500390565b6000816000190483118215151615610e9257610e92610da3565b500290565b600181815b80851115610ed2578160001904821115610eb857610eb8610da3565b80851615610ec557918102915b93841c9390800290610e9c565b509250929050565b600082610ee9575060016105f2565b81610ef6575060006105f2565b8160018114610f0c5760028114610f1657610f32565b60019150506105f2565b60ff841115610f2757610f27610da3565b50506001821b6105f2565b5060208310610133831016604e8410600b8410161715610f55575081810a6105f2565b610f5f8383610e97565b8060001904821115610f7357610f73610da3565b029392505050565b6000610c888383610eda565b634e487b7160e01b600052601260045260246000fd5b600082610fac57610fac610f87565b500490565b600060ff831680610fc457610fc4610f87565b8060ff84160491505092915050565b600060ff821660ff84168160ff0481118215151615610f7357610f73610da3565b600060ff821660ff84168082101561100e5761100e610da3565b90039392505050565b600060ff821660ff84168060ff0382111561103457611034610da3565b01939250505056fea2646970667358221220fb54d6889037e1b17d92c7bed44965424a2d25dc22b065ff5fa6c676f82e800364736f6c634300080c0033";
    const isSuperArgs = (xs) => xs.length > 1;
    class DefaultRoyalty__factory extends ethers_1.ContractFactory {
        constructor(...args) {
            if (isSuperArgs(args)) {
                super(...args);
            }
            else {
                super(_abi, _bytecode, args[0]);
            }
        }
        deploy(valuesContract, overrides) {
            return super.deploy(valuesContract, overrides || {});
        }
        getDeployTransaction(valuesContract, overrides) {
            return super.getDeployTransaction(valuesContract, overrides || {});
        }
        attach(address) {
            return super.attach(address);
        }
        connect(signer) {
            return super.connect(signer);
        }
        static createInterface() {
            return new ethers_1.utils.Interface(_abi);
        }
        static connect(address, signerOrProvider) {
            return new ethers_1.Contract(address, _abi, signerOrProvider);
        }
    }
    exports.DefaultRoyalty__factory = DefaultRoyalty__factory;
    DefaultRoyalty__factory.bytecode = _bytecode;
    DefaultRoyalty__factory.abi = _abi;
});
//# sourceMappingURL=DefaultRoyalty__factory.js.map