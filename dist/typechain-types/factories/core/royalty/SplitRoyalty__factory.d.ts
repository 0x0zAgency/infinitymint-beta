import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SplitRoyalty, SplitRoyaltyInterface } from "../../../core/royalty/SplitRoyalty";
type SplitRoyaltyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SplitRoyalty__factory extends ContractFactory {
    constructor(...args: SplitRoyaltyConstructorParams);
    deploy(valuesContract: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SplitRoyalty>;
    getDeployTransaction(valuesContract: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SplitRoyalty;
    connect(signer: Signer): SplitRoyalty__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b5060405162001e5038038062001e50833981016040819052620000349162000588565b600080546001600160a01b0319908116339081178355825260036020526040808320805460ff19166001908117909155839055600292909255600480546001600160a01b038516921682178155915163e7b6dac960e01b8152839263e7b6dac991620000c391016020808252600e908201526d62617365546f6b656e56616c756560901b604082015260600190565b602060405180830381865afa158015620000e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001079190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200016f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001959190620005ba565b620001a19190620005d4565b6008556004805460405163e7b6dac960e01b8152602092810192909252600e60248301526d62617365546f6b656e56616c756560901b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002339190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa1580156200029b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c19190620005ba565b620002cd9190620005d4565b600a556004805460405163e7b6dac960e01b8152602092810192909252600e60248301526d62617365546f6b656e56616c756560901b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa15801562000339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035f9190620005ba565b6004805460405163e7b6dac960e01b8152602092810192909252600d60248301526c7374617274696e67507269636560981b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa158015620003c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ed9190620005ba565b620003f99190620005d4565b6009556004805460405163e7b6dac960e01b81526064926001600160a01b039092169163e7b6dac9916200044e91016020808252600c908201526b1cdd1a58dad95c94dc1b1a5d60a21b604082015260600190565b602060405180830381865afa1580156200046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004929190620005ba565b1115620004ef5760405162461bcd60e51b815260206004820152602160248201527f737469636b65722073706c697420697320612076616c7565206f7665722031306044820152600360fc1b606482015260840160405180910390fd5b6004805460405163e7b6dac960e01b8152602092810192909252600c60248301526b1cdd1a58dad95c94dc1b1a5d60a21b60448301526001600160a01b03169063e7b6dac990606401602060405180830381865afa15801562000556573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200057c9190620005ba565b600b5550620006029050565b6000602082840312156200059b57600080fd5b81516001600160a01b0381168114620005b357600080fd5b9392505050565b600060208284031215620005cd57600080fd5b5051919050565b6000816000190483118215151615620005fd57634e487b7160e01b600052601160045260246000fd5b500290565b61183e80620006126000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806304caf36a1461014e5780630d494e971461016357806310a8c7a91461017f578063121c4ee71461019257806331ed86d21461019a5780633a9c021e146101ad5780634ab247fd146101c757806354fe9fd7146101da5780635b6bf641146101fa5780636884d0a6146102025780637ff9b5961461020b578063948509ea14610214578063a2b40d191461023f578063a931376914610252578063b1f525c61461025b578063b64d7df11461027b578063c235391814610284578063c26623f0146102a4578063c7a4d6c9146102c4578063cc490e64146102e4578063d15d4150146102ec578063d5f394881461030f578063d8b964e614610322578063e8953af214610345578063f2fde38b14610358578063f80335a21461036b578063fe684c0e1461037e575b600080fd5b61016161015c366004611237565b610391565b005b61016c60095481565b6040519081526020015b60405180910390f35b61016161018d36600461128f565b6107ad565b61016161085a565b6101616101a836600461128f565b6108c7565b6101b5600081565b60405160ff9091168152602001610176565b6101616101d5366004611354565b610970565b61016c6101e8366004611389565b60066020526000908152604090205481565b6101b5600181565b61016c60025481565b61016c60085481565b600554610227906001600160a01b031681565b6040516001600160a01b039091168152602001610176565b61016161024d3660046113ad565b6109fb565b61016c600b5481565b61016c6102693660046113ad565b600d6020526000908152604090205481565b61016c600a5481565b61016c6102923660046113ad565b6000908152600d602052604090205490565b61016c6102b23660046113ad565b60076020526000908152604090205481565b6102d76102d2366004611389565b610a2f565b60405161017691906113c6565b600e5461016c565b6102ff6102fa366004611389565b610b58565b6040519015158152602001610176565b600054610227906001600160a01b031681565b6102ff610330366004611389565b60036020526000908152604090205460ff1681565b61016c610353366004611389565b610b93565b610161610366366004611389565b610d03565b6101616103793660046113ad565b610da3565b61016161038c36600461140a565b610e48565b6000546001600160a01b03163314806103b957503360009081526003602052604090205460ff165b6103c233610f6c565b6103cb30610f6c565b6040516020016103dc929190611474565b604051602081830303815290604052906104125760405162461bcd60e51b815260040161040991906114d0565b60405180910390fd5b5060018060008282546104259190611519565b9091555050600154826104405761043b82610da3565b610787565b6000828152600d602052604090205461045a906001611519565b6000838152600d6020526040902055600e5415806104795750600e5482115b80610482575060005b8061048d5750606483105b156104d457600080546001600160a01b03168152600660205260409020546104b6908490611519565b600080546001600160a01b0316815260066020526040902055610787565b600083815b600e548110156106f2576000806000600e84815481106104fb576104fb611531565b90600052602060002001805461051090611547565b80601f016020809104026020016040519081016040528092919081815260200182805461053c90611547565b80156105895780601f1061055e57610100808354040283529160200191610589565b820191906000526020600020905b81548152906001019060200180831161056c57829003601f168201915b50505050508060200190518101906105a1919061157c565b919450925090508161060b5760405162461bcd60e51b815260206004820152602d60248201527f50726563656e74616765206973206c657373207468616e207a65726f206f722060448201526c657175616c20746f207a65726f60981b6064820152608401610409565b80881461061a575050506106e0565b60008261062860648c6115c9565b61063291906115dd565b90506000811161068e5760405162461bcd60e51b815260206004820152602160248201527f50726f666974206973206c657373207468616e206f7220657175616c207a65726044820152606f60f81b6064820152608401610409565b6001600160a01b0384166000908152600660205260409020546106b2908290611519565b6001600160a01b0385166000908152600660205260409020556106d581876115fc565b955060019650505050505b806106ea81611613565b9150506104d9565b50816107405760405162461bcd60e51b815260206004820152601d60248201527f646964206e6f7420696e6372656d656e7420616e792070726f666974730000006044820152606401610409565b801561078457600080546001600160a01b031681526006602052604090205461076a908290611519565b600080546001600160a01b03168152600660205260409020555b50505b60015481146107a85760405162461bcd60e51b81526004016104099061162e565b505050565b6000546001600160a01b031633146107d75760405162461bcd60e51b815260040161040990611650565b80516107e257600080fd5b60005b81518110156108565760016003600084848151811061080657610806611531565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161084983611613565b90915550506001016107e5565b5050565b6000546001600160a01b031633146108845760405162461bcd60e51b815260040161040990611650565b60408051600080825260208201909252906108af565b606081526020019060019003908161089a5790505b5080516108c491600e916020909101906110ee565b50565b6000546001600160a01b031633146108f15760405162461bcd60e51b815260040161040990611650565b80516108fc57600080fd5b60005b81518110156108565760006003600084848151811061092057610920611531565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161096383611676565b90915550506001016108ff565b6000546001600160a01b0316331461099a5760405162461bcd60e51b815260040161040990611650565b604080516001600160a01b038516602082015290810183905260608101829052600e9060800160408051601f198184030181529190528154600181018355600092835260209283902082516109f5949190920192019061114b565b50505050565b6000546001600160a01b03163314610a255760405162461bcd60e51b815260040161040990611650565b60088054600a5555565b606060005b600e54811015610b52576000806000600e8481548110610a5657610a56611531565b906000526020600020018054610a6b90611547565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9790611547565b8015610ae45780601f10610ab957610100808354040283529160200191610ae4565b820191906000526020600020905b815481529060010190602001808311610ac757829003601f168201915b5050505050806020019051810190610afc919061157c565b925092509250856001600160a01b0316836001600160a01b03161415610b3c5781858281518110610b2f57610b2f611531565b6020026020010181815250505b5050508080610b4a90611613565b915050610a34565b50919050565b600080546001600160a01b0383811691161480610b8d57506001600160a01b03821660009081526003602052604090205460ff165b92915050565b600080546001600160a01b0316331480610bbc57503360009081526003602052604090205460ff165b610bc533610f6c565b610bce30610f6c565b604051602001610bdf929190611474565b60405160208183030381529060405290610c0c5760405162461bcd60e51b815260040161040991906114d0565b506001806000828254610c1f9190611519565b90915550506001546001600160a01b038316600090815260066020526040902054610c875760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964206f7220456d707479206164647265737360401b6044820152606401610409565b6001600160a01b03831660008181526006602090815260408083208054908490558151818152928301939093529194507f2cbba200147d9b2ecc06e0ff06af07d3630a1d26383fb0b6385fa32a327b7822910160405180910390a26001548114610b525760405162461bcd60e51b81526004016104099061162e565b6000546001600160a01b03163314610d2d5760405162461bcd60e51b815260040161040990611650565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b0316331480610dcb57503360009081526003602052604090205460ff165b610dd433610f6c565b610ddd30610f6c565b604051602001610dee929190611474565b60405160208183030381529060405290610e1b5760405162461bcd60e51b815260040161040991906114d0565b50600081815260076020526040902054610e36906001611519565b60009182526007602052604090912055565b6000546001600160a01b03163314610e725760405162461bcd60e51b815260040161040990611650565b6000546001600160a01b0383811691161415610ec95760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b6044820152606401610409565b6001600160a01b0382166000908152600360205260409020805460ff19168215801591909117909155610f105760028054906000610f0683611613565b9190505550610f26565b60028054906000610f2083611676565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b60148110156110ac576000610fa98260136115fc565b610fb49060086115dd565b610fbf906002611771565b610fd2906001600160a01b0387166115c9565b60f81b9050600060108260f81c610fe9919061177d565b60f81b905060008160f81c6010611000919061179f565b8360f81c61100e91906117c0565b60f81b905061101c826110b3565b856110288660026115dd565b8151811061103857611038611531565b60200101906001600160f81b031916908160001a905350611058816110b3565b856110648660026115dd565b61106f906001611519565b8151811061107f5761107f611531565b60200101906001600160f81b031916908160001a90535050505080806110a490611613565b915050610f93565b5092915050565b6000600a60f883901c10156110da576110d160f883901c60306117e3565b60f81b92915050565b6110d160f883901c60576117e3565b919050565b82805482825590600052602060002090810192821561113b579160200282015b8281111561113b578251805161112b91849160209091019061114b565b509160200191906001019061110e565b506111479291506111cb565b5090565b82805461115790611547565b90600052602060002090601f01602090048101928261117957600085556111bf565b82601f1061119257805160ff19168380011785556111bf565b828001600101855582156111bf579182015b828111156111bf5782518255916020019190600101906111a4565b506111479291506111e8565b808211156111475760006111df82826111fd565b506001016111cb565b5b8082111561114757600081556001016111e9565b50805461120990611547565b6000825580601f10611219575050565b601f0160209004906000526020600020908101906108c491906111e8565b6000806040838503121561124a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146108c457600080fd5b80356110e98161126f565b600060208083850312156112a257600080fd5b823567ffffffffffffffff808211156112ba57600080fd5b818501915085601f8301126112ce57600080fd5b8135818111156112e0576112e0611259565b8060051b604051601f19603f8301168101818110858211171561130557611305611259565b60405291825284820192508381018501918883111561132357600080fd5b938501935b828510156113485761133985611284565b84529385019392850192611328565b98975050505050505050565b60008060006060848603121561136957600080fd5b83356113748161126f565b95602085013595506040909401359392505050565b60006020828403121561139b57600080fd5b81356113a68161126f565b9392505050565b6000602082840312156113bf57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156113fe578351835292840192918401916001016113e2565b50909695505050505050565b6000806040838503121561141d57600080fd5b82356114288161126f565b91506020830135801515811461143d57600080fd5b809150509250929050565b60005b8381101561146357818101518382015260200161144b565b838111156109f55750506000910152565b61060f60f31b815260008351611491816002850160208801611448565b72040dcdee840c2e0e0e4deeccac840dedc4060f606b1b60029184019182015283516114c4816015840160208801611448565b01601501949350505050565b60208152600082518060208401526114ef816040850160208701611448565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561152c5761152c611503565b500190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061155b57607f821691505b60208210811415610b5257634e487b7160e01b600052602260045260246000fd5b60008060006060848603121561159157600080fd5b835161159c8161126f565b602085015160409095015190969495509392505050565b634e487b7160e01b600052601260045260246000fd5b6000826115d8576115d86115b3565b500490565b60008160001904831182151516156115f7576115f7611503565b500290565b60008282101561160e5761160e611503565b500390565b600060001982141561162757611627611503565b5060010190565b60208082526008908201526772652d656e74727960c01b604082015260600190565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b60008161168557611685611503565b506000190190565b600181815b808511156116c85781600019048211156116ae576116ae611503565b808516156116bb57918102915b93841c9390800290611692565b509250929050565b6000826116df57506001610b8d565b816116ec57506000610b8d565b8160018114611702576002811461170c57611728565b6001915050610b8d565b60ff84111561171d5761171d611503565b50506001821b610b8d565b5060208310610133831016604e8410600b841016171561174b575081810a610b8d565b611755838361168d565b806000190482111561176957611769611503565b029392505050565b60006113a683836116d0565b600060ff831680611790576117906115b3565b8060ff84160491505092915050565b600060ff821660ff84168160ff048111821515161561176957611769611503565b600060ff821660ff8416808210156117da576117da611503565b90039392505050565b600060ff821660ff84168060ff0382111561180057611800611503565b01939250505056fea26469706673582212204c0b2e4227faff2c02709aebcc930be3835a3fe5ccfd3adc649a4e29dd96ba9764736f6c634300080c0033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "valuesContract";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newTotal";
            readonly type: "uint256";
        }];
        readonly name: "DispensedRoyalty";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "changee";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "PermissionChange";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly name: "TransferedOwnership";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "SPLIT_TYPE_MINT";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "SPLIT_TYPE_STICKER";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "percentage";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "splitType";
            readonly type: "uint256";
        }];
        readonly name: "addSplit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "approvalCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "approved";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_tokenPrice";
            readonly type: "uint256";
        }];
        readonly name: "changePrice";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "counter";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "dispenseRoyalty";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "total";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "erc721Destination";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "freebies";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "splitType";
            readonly type: "uint256";
        }];
        readonly name: "getCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getSplitCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "getSplits";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "split";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "splitType";
            readonly type: "uint256";
        }];
        readonly name: "incrementBalance";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "isAuthenticated";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastTokenPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "addrs";
            readonly type: "address[]";
        }];
        readonly name: "multiApprove";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "addrs";
            readonly type: "address[]";
        }];
        readonly name: "multiRevoke";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "originalTokenPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "splitType";
            readonly type: "uint256";
        }];
        readonly name: "registerFree";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "resetSplits";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "setPrivilages";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stickerSplit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "values";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): SplitRoyaltyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SplitRoyalty;
}
export {};
//# sourceMappingURL=SplitRoyalty__factory.d.ts.map