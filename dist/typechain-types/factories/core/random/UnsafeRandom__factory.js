(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "ethers"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnsafeRandom__factory = void 0;
    /* Autogenerated file. Do not edit manually. */
    /* tslint:disable */
    /* eslint-disable */
    const ethers_1 = require("ethers");
    const _abi = [
        {
            inputs: [
                {
                    internalType: "uint32",
                    name: "seedNumber",
                    type: "uint32",
                },
                {
                    internalType: "address",
                    name: "valuesContract",
                    type: "address",
                },
            ],
            stateMutability: "nonpayable",
            type: "constructor",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "maxNumber",
                    type: "uint256",
                },
            ],
            name: "getMaxNumber",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "getNumber",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [],
            name: "hasDeployed",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "randomnessFactor",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "salt",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "maxNumber",
                    type: "uint256",
                },
                {
                    internalType: "uint256",
                    name: "_salt",
                    type: "uint256",
                },
            ],
            name: "unsafeNumber",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
    ];
    const _bytecode = "0x60806040526001805460ff1916815560025562be135560045534801561002457600080fd5b5060405161047e38038061047e833981016040819052610043916100f4565b600380546001600160a01b0319166001600160a01b03831690811790915560405163e7b6dac960e01b815260206004820152600f60248201526e3930b73237b6b2b9b9a330b1ba37b960891b604482015282919063e7b6dac990606401602060405180830381865afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e19190610143565b600055505063ffffffff1660045561015c565b6000806040838503121561010757600080fd5b825163ffffffff8116811461011b57600080fd5b60208401519092506001600160a01b038116811461013857600080fd5b809150509250929050565b60006020828403121561015557600080fd5b5051919050565b6103138061016b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806307aaf42d146100675780637881bab914610089578063a0d0ca0f146100aa578063bfa0b133146100bd578063ceb42337146100c6578063f2c9ecd8146100cf575b600080fd5b6001546100749060ff1681565b60405190151581526020015b60405180910390f35b61009c610097366004610273565b6100d7565b604051908152602001610080565b61009c6100b8366004610295565b610180565b61009c60025481565b61009c60005481565b61009c610199565b60008083116100e557600192505b6004546002546000805460408051602081019590955284018690526060840192909252608083018690524460a08401524360c08401524260e08401523361010084015261012083019190915290610140016040516020818303038152906040528051906020012060001c905060008061015e8387610242565b91509150811561017257925061017a915050565b600093505050505b92915050565b600280546001019081905560009061017a9083906100d7565b60028054600101905560035460405163e7b6dac960e01b815260206004820152600f60248201526e36b0bc2930b73237b6a73ab6b132b960891b604482015260009161023d916001600160a01b039091169063e7b6dac990606401602060405180830381865afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023591906102ae565b6002546100d7565b905090565b600080826102555750600090508061026c565b6001838581610266576102666102c7565b06915091505b9250929050565b6000806040838503121561028657600080fd5b50508035926020909101359150565b6000602082840312156102a757600080fd5b5035919050565b6000602082840312156102c057600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220b06dcf91eb1795072d836133218113c6c083fa51da2783470248fdd99c00cb0464736f6c634300080c0033";
    const isSuperArgs = (xs) => xs.length > 1;
    class UnsafeRandom__factory extends ethers_1.ContractFactory {
        constructor(...args) {
            if (isSuperArgs(args)) {
                super(...args);
            }
            else {
                super(_abi, _bytecode, args[0]);
            }
        }
        deploy(seedNumber, valuesContract, overrides) {
            return super.deploy(seedNumber, valuesContract, overrides || {});
        }
        getDeployTransaction(seedNumber, valuesContract, overrides) {
            return super.getDeployTransaction(seedNumber, valuesContract, overrides || {});
        }
        attach(address) {
            return super.attach(address);
        }
        connect(signer) {
            return super.connect(signer);
        }
        static createInterface() {
            return new ethers_1.utils.Interface(_abi);
        }
        static connect(address, signerOrProvider) {
            return new ethers_1.Contract(address, _abi, signerOrProvider);
        }
    }
    exports.UnsafeRandom__factory = UnsafeRandom__factory;
    UnsafeRandom__factory.bytecode = _bytecode;
    UnsafeRandom__factory.abi = _abi;
});
//# sourceMappingURL=UnsafeRandom__factory.js.map