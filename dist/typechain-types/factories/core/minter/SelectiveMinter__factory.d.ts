import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SelectiveMinter, SelectiveMinterInterface } from "../../../core/minter/SelectiveMinter";
type SelectiveMinterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SelectiveMinter__factory extends ContractFactory {
    constructor(...args: SelectiveMinterConstructorParams);
    deploy(valuesContract: PromiseOrValue<string>, storageContract: PromiseOrValue<string>, assetContract: PromiseOrValue<string>, randomNumberContract: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SelectiveMinter>;
    getDeployTransaction(valuesContract: PromiseOrValue<string>, storageContract: PromiseOrValue<string>, assetContract: PromiseOrValue<string>, randomNumberContract: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SelectiveMinter;
    connect(signer: Signer): SelectiveMinter__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b50604051620020a6380380620020a68339810160408190526200003491620000d1565b60008054336001600160a01b0319918216811783558252600360205260408220805460ff191660019081179091558290556002919091556005805482166001600160a01b0396871617905560068054821694861694909417909355600480548416928516929092179091556007805490921692169190911790556200012e565b80516001600160a01b0381168114620000cc57600080fd5b919050565b60008060008060808587031215620000e857600080fd5b620000f385620000b4565b93506200010360208601620000b4565b92506200011360408601620000b4565b91506200012360608601620000b4565b905092959194509250565b611f68806200013e6000396000f3fe608060405234801561001057600080fd5b50600436106100e65760003560e01c80630c380cf0146100eb57806310a8c7a91461011b5780631a5dad51146101305780631bc8bf931461015157806331ed86d2146101715780634c73947614610184578063573f8600146101975780636884d0a6146101aa5780636fa13f3c146101b35780639bb2ad88146101c6578063aed5ef82146101d9578063d15d4150146101ec578063d5f394881461020f578063d8b964e614610222578063ec2b46c314610245578063f2fde38b14610258578063fe528b181461026b578063fe684c0e1461027e575b600080fd5b6005546100fe906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012e610129366004611422565b610291565b005b61014361013e3660046114d2565b610347565b604051908152602001610112565b61016461015f366004611532565b61090e565b6040516101129190611768565b61012e61017f366004611422565b610ae0565b61012e610192366004611782565b610b89565b6004546100fe906001600160a01b031681565b61014360025481565b61012e6101c1366004611782565b610c24565b6101646101d436600461179f565b610cbf565b6007546100fe906001600160a01b031681565b6101ff6101fa366004611782565b610e89565b6040519015158152602001610112565b6000546100fe906001600160a01b031681565b6101ff610230366004611782565b60036020526000908152604090205460ff1681565b6006546100fe906001600160a01b031681565b61012e610266366004611782565b610ec0565b61012e610279366004611782565b610f60565b61012e61028c3660046117ea565b610ffb565b6000546001600160a01b031633146102c45760405162461bcd60e51b81526004016102bb9061181d565b60405180910390fd5b80516102cf57600080fd5b60005b8151811015610343576001600360008484815181106102f3576102f3611843565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff19169215159290921790915560028054916103368361186f565b90915550506001016102d2565b5050565b600080546001600160a01b031633148061037057503360009081526003602052604090205460ff165b6103793361111f565b6103823061111f565b60405160200161039392919061188a565b604051602081830303815290604052906103c05760405162461bcd60e51b81526004016102bb91906118e6565b5060055460405163e7b6dac960e01b815260206004820152600c60248201526b1c1c995d9a595dd0dbdd5b9d60a21b60448201526001600160a01b039091169063e7b6dac990606401602060405180830381865afa158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a91906118f9565b90508061045657610908565b60075460055460405163e7b6dac960e01b81526020600482015260096024820152681b985b5950dbdd5b9d60ba1b60448201526000926001600160a01b039081169263a0d0ca0f9291169063e7b6dac990606401602060405180830381865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906118f9565b6040518263ffffffff1660e01b815260040161050991815260200190565b6020604051808303816000875af1158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c91906118f9565b6004805460075460405163433ee8cd60e01b81529394506000936001600160a01b039283169363433ee8cd93610587938b9391169101611912565b6000604051808303816000875af11580156105a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ce91908101906119f8565b60048054604080516346e4e7c960e01b815290519394506000936106899385936001600160a01b0316926346e4e7c992818301926020928290030181865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611ae1565b60208501516040860151606087015160808801518b60005b604051908082528060200260200182016040528015610683578160200160208202803683370190505b50611266565b60065460405163d9f2114160e01b81529192506001600160a01b03169063d9f21141906106bf9088906000908690600401611afe565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b506001925050505b848163ffffffff1610156109035763ffffffff81166020830152600480548351600754604051638e6e826d60e01b81526001600160a01b0393841694638e6e826d946107449493169101611912565b6000604051808303816000875af1158015610763573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261078b9190810190611b25565b60a083015260048054835160075460405163eb2c2da360e01b81526001600160a01b039384169463eb2c2da3946107c59493169101611912565b6000604051808303816000875af11580156107e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080c9190810190611b25565b606083015260048054600754604051632637f35160e11b81529283018790526001600160a01b0390811660248401521690634c6fe6a2906044016000604051808303816000875af1158015610865573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088d9190810190611b25565b60c083015260065460405163d9f2114160e01b81526001600160a01b039091169063d9f21141906108c690899085908790600401611b59565b600060405180830381600087803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b505050508060010190506106f5565b505050505b92915050565b6109166112fc565b6000546001600160a01b031633148061093e57503360009081526003602052604090205460ff165b6109473361111f565b6109503061111f565b60405160200161096192919061188a565b6040516020818303038152906040529061098e5760405162461bcd60e51b81526004016102bb91906118e6565b5060045482516000916001600160a01b031690637bd6ec4a906109ba9086016020908101908701611ae1565b60075460405160e084901b6001600160e01b031916815263ffffffff928316600482015291891660248301526001600160a01b031660448201526064016000604051808303816000875af1158015610a16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a3e91908101906119f8565b9050610ad785600460009054906101000a90046001600160a01b03166001600160a01b03166346e4e7c96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190611ae1565b60208401516040850151606086015160808701518a600061065a565b95945050505050565b6000546001600160a01b03163314610b0a5760405162461bcd60e51b81526004016102bb9061181d565b8051610b1557600080fd5b60005b815181101561034357600060036000848481518110610b3957610b39611843565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff1916921515929092179091556002805491610b7c83611b89565b9091555050600101610b18565b6000546001600160a01b0316331480610bb157503360009081526003602052604090205460ff165b610bba3361111f565b610bc33061111f565b604051602001610bd492919061188a565b60405160208183030381529060405290610c015760405162461bcd60e51b81526004016102bb91906118e6565b50600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331480610c4c57503360009081526003602052604090205460ff165b610c553361111f565b610c5e3061111f565b604051602001610c6f92919061188a565b60405160208183030381529060405290610c9c5760405162461bcd60e51b81526004016102bb91906118e6565b50600780546001600160a01b0319166001600160a01b0392909216919091179055565b610cc76112fc565b6000546001600160a01b0316331480610cef57503360009081526003602052604090205460ff165b610cf83361111f565b610d013061111f565b604051602001610d1292919061188a565b60405160208183030381529060405290610d3f5760405162461bcd60e51b81526004016102bb91906118e6565b5060065460405163fccc3cd560e01b81526001600160a01b03848116600483015263ffffffff87166024830152600092169063fccc3cd590604401600060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dbf9190810190611c0f565b9050826001600160a01b031681604001516001600160a01b031614610e125760405162461bcd60e51b81526020600482015260096024820152683130b21037bbb732b960b91b60448201526064016102bb565b8463ffffffff16816020015163ffffffff1614610e5d5760405162461bcd60e51b81526020600482015260096024820152680c4c2c840d2dcc8caf60bb1b60448201526064016102bb565b610ad78482600001518360a001518460c001518560600151866080015187604001518860e00151611266565b600080546001600160a01b03838116911614806109085750506001600160a01b031660009081526003602052604090205460ff1690565b6000546001600160a01b03163314610eea5760405162461bcd60e51b81526004016102bb9061181d565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b0316331480610f8857503360009081526003602052604090205460ff165b610f913361111f565b610f9a3061111f565b604051602001610fab92919061188a565b60405160208183030381529060405290610fd85760405162461bcd60e51b81526004016102bb91906118e6565b50600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146110255760405162461bcd60e51b81526004016102bb9061181d565b6000546001600160a01b038381169116141561107c5760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016102bb565b6001600160a01b0382166000908152600360205260409020805460ff191682158015919091179091556110c357600280549060006110b98361186f565b91905055506110d9565b600280549060006110d383611b89565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b601481101561125f57600061115c826013611d3f565b611167906008611d56565b611172906002611e59565b611185906001600160a01b038716611e7b565b60f81b9050600060108260f81c61119c9190611e8f565b60f81b905060008160f81c60106111b39190611eb1565b8360f81c6111c19190611ed2565b60f81b90506111cf826112c1565b856111db866002611d56565b815181106111eb576111eb611843565b60200101906001600160f81b031916908160001a90535061120b816112c1565b85611217866002611d56565b611222906001611ef5565b8151811061123257611232611843565b60200101906001600160f81b031916908160001a90535050505080806112579061186f565b915050611146565b5092915050565b61126e6112fc565b50604080516101008101825263ffffffff98891681529890971660208901526001600160a01b03909116958701959095526060860191909152608085015260a084019190915260c083015260e082015290565b6000600a60f883901c10156112e8576112df60f883901c6030611f0d565b60f81b92915050565b6112df60f883901c6057611f0d565b919050565b604051806101000160405280600063ffffffff168152602001600063ffffffff16815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081525090565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561138e5761138e611356565b60405290565b60405161010081016001600160401b038111828210171561138e5761138e611356565b604051601f8201601f191681016001600160401b03811182821017156113df576113df611356565b604052919050565b60006001600160401b0382111561140057611400611356565b5060051b60200190565b6001600160a01b038116811461141f57600080fd5b50565b6000602080838503121561143557600080fd5b82356001600160401b0381111561144b57600080fd5b8301601f8101851361145c57600080fd5b803561146f61146a826113e7565b6113b7565b81815260059190911b8201830190838101908783111561148e57600080fd5b928401925b828410156114b55783356114a68161140a565b82529284019290840190611493565b979650505050505050565b63ffffffff8116811461141f57600080fd5b600080604083850312156114e557600080fd5b82356114f0816114c0565b915060208301356115008161140a565b809150509250929050565b60006001600160401b0382111561152457611524611356565b50601f01601f191660200190565b60008060006060848603121561154757600080fd5b8335611552816114c0565b925060208401356115628161140a565b915060408401356001600160401b0381111561157d57600080fd5b8401601f8101861361158e57600080fd5b803561159c61146a8261150b565b8181528760208385010111156115b157600080fd5b816020840160208301376000602083830101528093505050509250925092565b600081518084526020808501945080840160005b8381101561160757815163ffffffff16875295820195908201906001016115e5565b509495945050505050565b60005b8381101561162d578181015183820152602001611615565b8381111561163c576000848401525b50505050565b6000815180845261165a816020860160208601611612565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156116075781516001600160a01b031687529582019590820190600101611682565b805163ffffffff168252600061010060208301516116cd602086018263ffffffff169052565b5060408301516116e860408601826001600160a01b03169052565b506060830151816060860152611700828601826115d1565b9150506080830151848203608086015261171a8282611642565b91505060a083015184820360a086015261173482826115d1565b91505060c083015184820360c086015261174e82826115d1565b91505060e083015184820360e0860152610ad7828261166e565b60208152600061177b60208301846116a7565b9392505050565b60006020828403121561179457600080fd5b813561177b8161140a565b6000806000606084860312156117b457600080fd5b83356117bf816114c0565b925060208401356117cf816114c0565b915060408401356117df8161140a565b809150509250925092565b600080604083850312156117fd57600080fd5b82356118088161140a565b91506020830135801515811461150057600080fd5b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561188357611883611859565b5060010190565b61060f60f31b8152600083516118a7816002850160208801611612565b72040dcdee840c2e0e0e4deeccac840dedc4060f606b1b60029184019182015283516118da816015840160208801611612565b01601501949350505050565b60208152600061177b6020830184611642565b60006020828403121561190b57600080fd5b5051919050565b63ffffffff9290921682526001600160a01b0316602082015260400190565b80516112f7816114c0565b600082601f83011261194d57600080fd5b8151602061195d61146a836113e7565b82815260059290921b8401810191818101908684111561197c57600080fd5b8286015b848110156119a0578051611993816114c0565b8352918301918301611980565b509695505050505050565b600082601f8301126119bc57600080fd5b81516119ca61146a8261150b565b8181528460208386010111156119df57600080fd5b6119f0826020830160208701611612565b949350505050565b600060208284031215611a0a57600080fd5b81516001600160401b0380821115611a2157600080fd5b9083019060a08286031215611a3557600080fd5b611a3d61136c565b611a4683611931565b8152602083015182811115611a5a57600080fd5b611a668782860161193c565b602083015250604083015182811115611a7e57600080fd5b611a8a8782860161193c565b604083015250606083015182811115611aa257600080fd5b611aae8782860161193c565b606083015250608083015182811115611ac657600080fd5b611ad2878286016119ab565b60808301525095945050505050565b600060208284031215611af357600080fd5b815161177b816114c0565b60018060a01b0384168152826020820152606060408201526000610ad760608301846116a7565b600060208284031215611b3757600080fd5b81516001600160401b03811115611b4d57600080fd5b6119f08482850161193c565b6001600160a01b038416815263ffffffff83166020820152606060408201819052600090610ad7908301846116a7565b600081611b9857611b98611859565b506000190190565b80516112f78161140a565b600082601f830112611bbc57600080fd5b81516020611bcc61146a836113e7565b82815260059290921b84018101918181019086841115611beb57600080fd5b8286015b848110156119a0578051611c028161140a565b8352918301918301611bef565b600060208284031215611c2157600080fd5b81516001600160401b0380821115611c3857600080fd5b908301906101008286031215611c4d57600080fd5b611c55611394565b611c5e83611931565b8152611c6c60208401611931565b6020820152611c7d60408401611ba0565b6040820152606083015182811115611c9457600080fd5b611ca08782860161193c565b606083015250608083015182811115611cb857600080fd5b611cc4878286016119ab565b60808301525060a083015182811115611cdc57600080fd5b611ce88782860161193c565b60a08301525060c083015182811115611d0057600080fd5b611d0c8782860161193c565b60c08301525060e083015182811115611d2457600080fd5b611d3087828601611bab565b60e08301525095945050505050565b600082821015611d5157611d51611859565b500390565b6000816000190483118215151615611d7057611d70611859565b500290565b600181815b80851115611db0578160001904821115611d9657611d96611859565b80851615611da357918102915b93841c9390800290611d7a565b509250929050565b600082611dc757506001610908565b81611dd457506000610908565b8160018114611dea5760028114611df457611e10565b6001915050610908565b60ff841115611e0557611e05611859565b50506001821b610908565b5060208310610133831016604e8410600b8410161715611e33575081810a610908565b611e3d8383611d75565b8060001904821115611e5157611e51611859565b029392505050565b600061177b8383611db8565b634e487b7160e01b600052601260045260246000fd5b600082611e8a57611e8a611e65565b500490565b600060ff831680611ea257611ea2611e65565b8060ff84160491505092915050565b600060ff821660ff84168160ff0481118215151615611e5157611e51611859565b600060ff821660ff841680821015611eec57611eec611859565b90039392505050565b60008219821115611f0857611f08611859565b500190565b600060ff821660ff84168060ff03821115611f2a57611f2a611859565b01939250505056fea264697066735822122044f94e85af42a9e257e1c749692ecd4f9cd61cbab13d8ace6f95a8c0e912d3c164736f6c634300080c0033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "valuesContract";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "storageContract";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "assetContract";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "randomNumberContract";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "changee";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "PermissionChange";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly name: "TransferedOwnership";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "approvalCount";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "approved";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "assetController";
        readonly outputs: readonly [{
            readonly internalType: "contract Asset";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "currentTokenId";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "getPreview";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "previewCount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "isAuthenticated";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "currentTokenId";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "mintData";
            readonly type: "bytes";
        }];
        readonly name: "mint";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "pathId";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "currentTokenId";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "colours";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "mintData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "assets";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "names";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "destinations";
                readonly type: "address[]";
            }];
            readonly internalType: "struct InfinityMintObject.InfinityObject";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "index";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "currentTokenId";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "mintPreview";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "pathId";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "currentTokenId";
                readonly type: "uint32";
            }, {
                readonly internalType: "address";
                readonly name: "owner";
                readonly type: "address";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "colours";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "mintData";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "assets";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "uint32[]";
                readonly name: "names";
                readonly type: "uint32[]";
            }, {
                readonly internalType: "address[]";
                readonly name: "destinations";
                readonly type: "address[]";
            }];
            readonly internalType: "struct InfinityMintObject.InfinityObject";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "addrs";
            readonly type: "address[]";
        }];
        readonly name: "multiApprove";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "addrs";
            readonly type: "address[]";
        }];
        readonly name: "multiRevoke";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "randomNumberController";
        readonly outputs: readonly [{
            readonly internalType: "contract RandomNumber";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "assetContract";
            readonly type: "address";
        }];
        readonly name: "setAssetController";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "value";
            readonly type: "bool";
        }];
        readonly name: "setPrivilages";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "randomNumberContract";
            readonly type: "address";
        }];
        readonly name: "setRandomNumberController";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "storageContract";
            readonly type: "address";
        }];
        readonly name: "setStorageController";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "storageController";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMintStorage";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "valuesController";
        readonly outputs: readonly [{
            readonly internalType: "contract InfinityMintValues";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): SelectiveMinterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SelectiveMinter;
}
export {};
//# sourceMappingURL=SelectiveMinter__factory.d.ts.map