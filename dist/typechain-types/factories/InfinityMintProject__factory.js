(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "ethers"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InfinityMintProject__factory = void 0;
    /* Autogenerated file. Do not edit manually. */
    /* tslint:disable */
    /* eslint-disable */
    const ethers_1 = require("ethers");
    const _abi = [
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "sender",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "changee",
                    type: "address",
                },
                {
                    indexed: false,
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "PermissionChange",
            type: "event",
        },
        {
            anonymous: false,
            inputs: [
                {
                    indexed: true,
                    internalType: "address",
                    name: "from",
                    type: "address",
                },
                {
                    indexed: true,
                    internalType: "address",
                    name: "to",
                    type: "address",
                },
            ],
            name: "TransferedOwnership",
            type: "event",
        },
        {
            inputs: [],
            name: "approvalCount",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            name: "approved",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "deployer",
            outputs: [
                {
                    internalType: "address",
                    name: "",
                    type: "address",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "getCurrentTag",
            outputs: [
                {
                    internalType: "bytes",
                    name: "",
                    type: "bytes",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "getCurrentVersion",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "getProject",
            outputs: [
                {
                    internalType: "bytes",
                    name: "",
                    type: "bytes",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "getUpdates",
            outputs: [
                {
                    internalType: "bytes[]",
                    name: "updates",
                    type: "bytes[]",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "version",
                    type: "uint256",
                },
            ],
            name: "getVersion",
            outputs: [
                {
                    internalType: "bytes",
                    name: "encodedProject",
                    type: "bytes",
                },
                {
                    internalType: "bytes",
                    name: "encodedTag",
                    type: "bytes",
                },
                {
                    internalType: "bytes",
                    name: "encodedInitialProject",
                    type: "bytes",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [],
            name: "getVersions",
            outputs: [
                {
                    internalType: "uint256",
                    name: "",
                    type: "uint256",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "isAuthenticated",
            outputs: [
                {
                    internalType: "bool",
                    name: "",
                    type: "bool",
                },
            ],
            stateMutability: "view",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiApprove",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address[]",
                    name: "addrs",
                    type: "address[]",
                },
            ],
            name: "multiRevoke",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "bytes",
                    name: "project",
                    type: "bytes",
                },
            ],
            name: "setInitialProject",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
                {
                    internalType: "bool",
                    name: "value",
                    type: "bool",
                },
            ],
            name: "setPrivilages",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "uint256",
                    name: "version",
                    type: "uint256",
                },
            ],
            name: "setVersion",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                },
            ],
            name: "transferOwnership",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
        {
            inputs: [
                {
                    internalType: "bytes",
                    name: "project",
                    type: "bytes",
                },
                {
                    internalType: "bytes",
                    name: "tag",
                    type: "bytes",
                },
                {
                    internalType: "bool",
                    name: "setAsCurrentVersion",
                    type: "bool",
                },
            ],
            name: "updateProject",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
        },
    ];
    const _bytecode = "0x60806040526000600755600060085534801561001a57600080fd5b50600080546001600160a01b0319163390811782558152600360205260408120805460ff19166001908117909155819055600255611a2f8061005d6000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c80630b98a032146100e057806310a8c7a9146100f557806331ed86d214610108578063408def1e1461011b5780634e275bcb1461012e5780636884d0a61461014c5780636d0cc895146101635780636e57b7001461016b578063a8a1d27314610173578063b88da75914610188578063c13a4744146101aa578063d15d4150146101bd578063d5f39488146101e0578063d8b964e61461020b578063f2fde38b1461022e578063fabec44a14610241578063fe684c0e14610249575b600080fd5b6100f36100ee3660046112ee565b61025c565b005b6100f3610103366004611378565b6104b8565b6100f3610116366004611378565b610565565b6100f3610129366004611424565b61060e565b610136610714565b6040516101439190611499565b60405180910390f35b61015560025481565b604051908152602001610143565b600754610155565b6101366107b7565b61017b610891565b60405161014391906114b3565b61019b610196366004611424565b610acb565b60405161014393929190611515565b6100f36101b8366004611558565b610cc7565b6101d06101cb366004611594565b610e14565b6040519015158152602001610143565b6000546101f3906001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6101d0610219366004611594565b60036020526000908152604090205460ff1681565b6100f361023c366004611594565b610e4f565b600854610155565b6100f36102573660046115af565b610eef565b6000546001600160a01b031633148061028457503360009081526003602052604090205460ff165b61028d33611013565b61029630611013565b6040516020016102a79291906115e2565b604051602081830303815290604052906102dd5760405162461bcd60e51b81526004016102d49190611499565b60405180910390fd5b5082516102fc5760405162461bcd60e51b81526004016102d49061163e565b815161033a5760405162461bcd60e51b815260206004820152600d60248201526c189b185b9ac81d1859c81cd95d609a1b60448201526064016102d4565b60068260405161034a9190611669565b9081526020016040518091039020805461036390611685565b1590506103a45760405162461bcd60e51b815260206004820152600f60248201526e1d1859c8185b1c9958591e481cd95d608a1b60448201526064016102d4565b6007546103ff5760405162461bcd60e51b815260206004820152602360248201527f696e697469616c2070726f6a656374206e6f7420736574206279206465706c6f6044820152623cb2b960e91b60648201526084016102d4565b6007546000908152600460209081526040909120845161042192860190611190565b506007546000908152600560209081526040909120835161044492850190611190565b50825160405161045c913391429143916020016116c0565b60405160208183030381529060405260068360405161047b9190611669565b9081526020016040518091039020908051906020019061049c929190611190565b5080156104aa576007546008555b505060078054600101905550565b6000546001600160a01b031633146104e25760405162461bcd60e51b81526004016102d4906116e6565b80516104ed57600080fd5b60005b8151811015610561576001600360008484815181106105115761051161170c565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161055483611738565b90915550506001016104f0565b5050565b6000546001600160a01b0316331461058f5760405162461bcd60e51b81526004016102d4906116e6565b805161059a57600080fd5b60005b8151811015610561576000600360008484815181106105be576105be61170c565b6020908102919091018101516001600160a01b031682528101919091526040016000908120805460ff191692151592909217909155600280549161060183611753565b909155505060010161059d565b6000546001600160a01b031633148061063657503360009081526003602052604090205460ff165b61063f33611013565b61064830611013565b6040516020016106599291906115e2565b604051602081830303815290604052906106865760405162461bcd60e51b81526004016102d49190611499565b50600754811080156106985750600081115b6106d65760405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b2103b32b939b4b7b760891b60448201526064016102d4565b600081815260046020526040902080546106ef90611685565b1515905061070f5760405162461bcd60e51b81526004016102d49061163e565b600855565b600854600090815260056020526040902080546060919061073490611685565b80601f016020809104026020016040519081016040528092919081815260200182805461076090611685565b80156107ad5780601f10610782576101008083540402835291602001916107ad565b820191906000526020600020905b81548152906001019060200180831161079057829003601f168201915b5050505050905090565b6008546000908152600460205260408120805460609291906107d890611685565b80601f016020809104026020016040519081016040528092919081815260200182805461080490611685565b80156108515780601f1061082657610100808354040283529160200191610851565b820191906000526020600020905b81548152906001019060200180831161083457829003601f168201915b5050505050905080516000141561088c57505060408051808201909152600e81526d7b276c6f63616c273a747275657d60901b602082015290565b919050565b60606000805b60075481101561091b57600081815260056020526040902080546108ba90611685565b158015915061090057506000818152600560205260409081902090516006916108e29161176a565b908152602001604051809103902080546108fb90611685565b151590505b15610913578161090f81611738565b9250505b600101610897565b50806001600160401b0381111561093457610934611229565b60405190808252806020026020018201604052801561096757816020015b60608152602001906001900390816109525790505b5091506000905060005b600754811015610ac6576000818152600560205260409020805461099490611685565b15801591506109da57506000818152600560205260409081902090516006916109bc9161176a565b908152602001604051809103902080546109d590611685565b151590505b15610abe576000818152600560205260409081902090516006916109fd9161176a565b90815260200160405180910390208054610a1690611685565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4290611685565b8015610a8f5780601f10610a6457610100808354040283529160200191610a8f565b820191906000526020600020905b815481529060010190602001808311610a7257829003601f168201915b5050505050838380610aa090611738565b945081518110610ab257610ab261170c565b60200260200101819052505b600101610971565b505090565b6000818152600460208181526040808420600583529084209380529190528054606092839283929091907f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec908390610b2290611685565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4e90611685565b8015610b9b5780601f10610b7057610100808354040283529160200191610b9b565b820191906000526020600020905b815481529060010190602001808311610b7e57829003601f168201915b50505050509250818054610bae90611685565b80601f0160208091040260200160405190810160405280929190818152602001828054610bda90611685565b8015610c275780601f10610bfc57610100808354040283529160200191610c27565b820191906000526020600020905b815481529060010190602001808311610c0a57829003601f168201915b50505050509150808054610c3a90611685565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6690611685565b8015610cb35780601f10610c8857610100808354040283529160200191610cb3565b820191906000526020600020905b815481529060010190602001808311610c9657829003601f168201915b505050505090509250925092509193909250565b6000546001600160a01b03163314610cf15760405162461bcd60e51b81526004016102d4906116e6565b60075415610d3f5760405162461bcd60e51b815260206004820152601b60248201527a1a5b9a5d1a585b081c1c9bda9958dd08185b1c9958591e481cd95d602a1b60448201526064016102d4565b60075460009081526004602090815260409091208251610d6192840190611190565b506040805180820182526007808252661a5b9a5d1a585b60ca1b60208084019182529154600090815260059092529290209051610d9e9290611190565b508051604051610db6913391429143916020016116c0565b6040516020818303038152906040526006604051610de190661a5b9a5d1a585b60ca1b815260070190565b90815260200160405180910390209080519060200190610e02929190611190565b50506000600855600780546001019055565b600080546001600160a01b0383811691161480610e4957506001600160a01b03821660009081526003602052604090205460ff165b92915050565b6000546001600160a01b03163314610e795760405162461bcd60e51b81526004016102d4906116e6565b600080546001600160a01b03908116825260036020526040808320805460ff1990811690915583546001600160a01b03191692851692831784558284528184208054909116600117905551909133917f93091b3f3cd424efabc74e181f3799f3476ed758412561ed3b29515c51f567529190a350565b6000546001600160a01b03163314610f195760405162461bcd60e51b81526004016102d4906116e6565b6000546001600160a01b0383811691161415610f705760405162461bcd60e51b815260206004820152601660248201527531b0b73737ba1036b7b234b33c903232b83637bcb2b960511b60448201526064016102d4565b6001600160a01b0382166000908152600360205260409020805460ff19168215801591909117909155610fb75760028054906000610fad83611738565b9190505550610fcd565b60028054906000610fc783611753565b91905055505b60405181151581526001600160a01b0383169033907ff38de818d000d07d091732dd783c6855722d7bc1934d92b7635133289d3416959060200160405180910390a35050565b60408051602880825260608281019093526000919060208201818036833701905050905060005b6014811015611153576000611050826013611806565b61105b90600861181d565b611066906002611920565b611079906001600160a01b038716611942565b60f81b9050600060108260f81c6110909190611956565b60f81b905060008160f81c60106110a79190611978565b8360f81c6110b59190611999565b60f81b90506110c38261115a565b856110cf86600261181d565b815181106110df576110df61170c565b60200101906001600160f81b031916908160001a9053506110ff8161115a565b8561110b86600261181d565b6111169060016119bc565b815181106111265761112661170c565b60200101906001600160f81b031916908160001a905350505050808061114b90611738565b91505061103a565b5092915050565b6000600a60f883901c10156111815761117860f883901c60306119d4565b60f81b92915050565b61117860f883901c60576119d4565b82805461119c90611685565b90600052602060002090601f0160209004810192826111be5760008555611204565b82601f106111d757805160ff1916838001178555611204565b82800160010185558215611204579182015b828111156112045782518255916020019190600101906111e9565b50611210929150611214565b5090565b5b808211156112105760008155600101611215565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561126757611267611229565b604052919050565b600082601f83011261128057600080fd5b81356001600160401b0381111561129957611299611229565b6112ac601f8201601f191660200161123f565b8181528460208386010111156112c157600080fd5b816020850160208301376000918101602001919091529392505050565b8035801515811461088c57600080fd5b60008060006060848603121561130357600080fd5b83356001600160401b038082111561131a57600080fd5b6113268783880161126f565b9450602086013591508082111561133c57600080fd5b506113498682870161126f565b925050611358604085016112de565b90509250925092565b80356001600160a01b038116811461088c57600080fd5b6000602080838503121561138b57600080fd5b82356001600160401b03808211156113a257600080fd5b818501915085601f8301126113b657600080fd5b8135818111156113c8576113c8611229565b8060051b91506113d984830161123f565b81815291830184019184810190888411156113f357600080fd5b938501935b838510156114185761140985611361565b825293850193908501906113f8565b98975050505050505050565b60006020828403121561143657600080fd5b5035919050565b60005b83811015611458578181015183820152602001611440565b83811115611467576000848401525b50505050565b6000815180845261148581602086016020860161143d565b601f01601f19169290920160200192915050565b6020815260006114ac602083018461146d565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561150857603f198886030184526114f685835161146d565b945092850192908501906001016114da565b5092979650505050505050565b606081526000611528606083018661146d565b828103602084015261153a818661146d565b9050828103604084015261154e818561146d565b9695505050505050565b60006020828403121561156a57600080fd5b81356001600160401b0381111561158057600080fd5b61158c8482850161126f565b949350505050565b6000602082840312156115a657600080fd5b6114ac82611361565b600080604083850312156115c257600080fd5b6115cb83611361565b91506115d9602084016112de565b90509250929050565b61060f60f31b8152600083516115ff81600285016020880161143d565b72040dcdee840c2e0e0e4deeccac840dedc4060f606b1b600291840191820152835161163281601584016020880161143d565b01601501949350505050565b602080825260119082015270189b185b9ac81c1c9bda9958dd081cd95d607a1b604082015260600190565b6000825161167b81846020870161143d565b9190910192915050565b600181811c9082168061169957607f821691505b602082108114156116ba57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020808252600c908201526b3737ba103232b83637bcb2b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561174c5761174c611722565b5060010190565b60008161176257611762611722565b506000190190565b600080835481600182811c91508083168061178657607f831692505b60208084108214156117a657634e487b7160e01b86526022600452602486fd5b8180156117ba57600181146117cb576117f8565b60ff198616895284890196506117f8565b60008a81526020902060005b868110156117f05781548b8201529085019083016117d7565b505084890196505b509498975050505050505050565b60008282101561181857611818611722565b500390565b600081600019048311821515161561183757611837611722565b500290565b600181815b8085111561187757816000190482111561185d5761185d611722565b8085161561186a57918102915b93841c9390800290611841565b509250929050565b60008261188e57506001610e49565b8161189b57506000610e49565b81600181146118b157600281146118bb576118d7565b6001915050610e49565b60ff8411156118cc576118cc611722565b50506001821b610e49565b5060208310610133831016604e8410600b84101617156118fa575081810a610e49565b611904838361183c565b806000190482111561191857611918611722565b029392505050565b60006114ac838361187f565b634e487b7160e01b600052601260045260246000fd5b6000826119515761195161192c565b500490565b600060ff8316806119695761196961192c565b8060ff84160491505092915050565b600060ff821660ff84168160ff048111821515161561191857611918611722565b600060ff821660ff8416808210156119b3576119b3611722565b90039392505050565b600082198211156119cf576119cf611722565b500190565b600060ff821660ff84168060ff038211156119f1576119f1611722565b01939250505056fea264697066735822122047fc7f2ced27fdc910d6c2039b8c099ee53128241fef50d717e27c681936451e64736f6c634300080c0033";
    const isSuperArgs = (xs) => xs.length > 1;
    class InfinityMintProject__factory extends ethers_1.ContractFactory {
        constructor(...args) {
            if (isSuperArgs(args)) {
                super(...args);
            }
            else {
                super(_abi, _bytecode, args[0]);
            }
        }
        deploy(overrides) {
            return super.deploy(overrides || {});
        }
        getDeployTransaction(overrides) {
            return super.getDeployTransaction(overrides || {});
        }
        attach(address) {
            return super.attach(address);
        }
        connect(signer) {
            return super.connect(signer);
        }
        static createInterface() {
            return new ethers_1.utils.Interface(_abi);
        }
        static connect(address, signerOrProvider) {
            return new ethers_1.Contract(address, _abi, signerOrProvider);
        }
    }
    exports.InfinityMintProject__factory = InfinityMintProject__factory;
    InfinityMintProject__factory.bytecode = _bytecode;
    InfinityMintProject__factory.abi = _abi;
});
//# sourceMappingURL=InfinityMintProject__factory.js.map